openapi: '3.0.0'
info:
  title: Quantum Swagger
  version: '1.0'
servers:
  - url: /api/v1
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /auth/sign-up:
    post:
      tags:
        - Registration
      description: Create a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        '200':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
      x-codegen-request-body-name: body
  /auth/activate-account:
    post:
      tags:
        - Registration
      description: Activate account via email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivateAccountRequest'
        required: true
      responses:
        '200':
          description: Activate user account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateAccountResponse'
      x-codegen-request-body-name: body
  /auth/sign-in:
    post:
      tags:
        - Login
      description: User client login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Sign-in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      x-codegen-request-body-name: body
  /auth/restore-password:
    post:
      tags:
        - Restore password
      description: Restore password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RestorePasswordRequest'
        required: true
      responses:
        '200':
          description: Restore user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePasswordResponse'
      x-codegen-request-body-name: body
  /auth/change-password:
    post:
      tags:
        - Restore password
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /rates:
    get:
      tags:
        - Currencies
      description: Get rates
      responses:
        '200':
          description: Current rates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrenciesRatesResponse'
  /client/current:
    get:
      tags:
        - Client
      description: Get authorized client info
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized client object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedUserResponse'
  /client/get-settings:
    get:
      tags:
        - Client
      description: Get all settings on client side
      components:
        security:
        - Bearer: []
      responses:
        '200':
          description: All settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    ageGroups:
                      - 18-24 Early Youth
                      - 25-35 Young
                      - 36-45 Middle
                      - 46-55 Senior
                      - 55+ Elderly
                    segments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
  /partner/current:
    get:
      tags:
        - Partner
      description: Get authorized partner info
      components:
        security:
        - Bearer: []
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedUserResponse'
  /partner/change-password:
    patch:
      tags:
        - Partner
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /partner/public-profile/upload:
    post:
      tags:
        - Partner
      description: Upload public partner profile images
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProfileUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
  /client/profile/upload:
    post:
      tags:
        - Client
      description: Upload client profile images
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
  /partner/get-settings:
    get:
      tags:
        - Partner
      description: >-
        Get all settings you need for partner. By the way, you have three
        countries, in example they are removed for output simlicity
      components:
        security:
        - Bearer: []
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    productCategoties:
                      - Food deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion and Beauty
                      - Clothing & Wearable
                      - Athletes & Wiliness
                      - Electronics & Tech
                      - Door-To-Door Delivery
                      - Ride-Hailing
                      - Pharmaceutical
                    currencies:
                      - USD
                      - AED
                      - SAR
                    targetSegments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    mediaTypes:
                      - Brand Store (Brand bundle)
                      - Store Positioning
                      - Home Page Banners
                      - In App Banners
                      - SKU Uplifting
                      - Popup Window
                      - Push Notification
                      - Free Delivery
                      - Cashback Offers
                      - Paid SM Campaigns
                      - Price Off Promotion
                      - Online survey or campaign
                      - Branded Printing
                      - OOH - Media Partnership
                      - Email Blast
                    countries:
                      - id: 1
                        name: Saudi Arabia
                        created_at: 2020-08-06T15:11:04.788Z
                        updated_at: 2020-08-06T15:11:04.788Z
                        city:
                          - id: 15
                            country_id: 1
                            name: Ha'il
                            lat: 27.5219
                            lng: 41.6907
                            created_at: 2020-08-06T15:11:04.804Z
                            updated_at: 2020-08-06T15:11:04.804Z
                          - id: 27
                            country_id: 1
                            name: Al Bahah
                            lat: 20.0129
                            lng: 41.4677
                            created_at: 2020-08-06T15:11:04.813Z
                            updated_at: 2020-08-06T15:11:04.813Z
  /admin/user/clients-list:
    get:
      tags:
        - Admin
      description: Get all clients
      components:
        security:
        - Bearer: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
        - name: order
          in: query
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: orderBy
          in: query
          schema:
            type: string
      responses:
        '200':
          description: All clients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientsListResponse'
  /partner/public-profile/media:
    delete:
      tags:
        - Partner
      description: >-
        Delete public partner profile media according to params id on database
        and s3
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  publicProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  publicProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: >-
            Simple response with "Public partner profile is deleted
            successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Public partner profile media is deleted successfully.
        '404':
          description: >-
            No public partner profile with this id or client profile has another
            owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Public partner profile has another owner. Can't fetch this
                    public partner profile with this credentials.
      x-codegen-request-body-name: input
  /client/profile/media:
    delete:
      tags:
        - Client
      description: Delete client profile media according to params id on database and s3
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  clientProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  clientProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: >-
            Simple response with "Client profile is deleted successfully."
            message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Client profile media is deleted successfully.
        '404':
          description: No client profile with this id or client profile has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Client profile has another owner. Can't fetch this client
                    profile with this credentials.
      x-codegen-request-body-name: input
  /admin/user/partners-list:
    get:
      tags:
        - Admin
      description: Get all partners
      security:
        - Bearer: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
        - name: order
          in: query
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: orderBy
          in: query
          schema:
            type: string
      responses:
        '200':
          description: All partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnersListResponse'
  /admin/common/current:
    get:
      tags:
        - Admin
      description: Get authorized admin info
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized admin object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedUserResponse'
  /admin/users/ban:
    patch:
      tags:
        - Admin
      description: Ban user
      security:
        - Bearer: []
              
      requestBody:
        description: User id for ban
        content:
          application/json:
            schema:
              type: string
          multipart/form-data:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: User is banned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BanResponse'
      x-codegen-request-body-name: userId
  /admin/users/unban:
    patch:
      tags:
        - Admin
      description: Unban user
      security:
        - Bearer: []
              
      requestBody:
        description: User id for ban
        content:
          application/json:
            schema:
              type: string
          multipart/form-data:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: User is unbanned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
      x-codegen-request-body-name: userId
  '/admin/requests/approve/{userId}':
    patch:
      tags:
        - Admin
      description: Approve user account
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: path
          description: User id for approve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User is approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
  '/admin/requests/decline/{userId}':
    patch:
      tags:
        - Admin
      description: Decline user account
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: path
          description: User id for decline
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User is declined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
  /partner/public-profile:
    get:
      tags:
        - Partner
      description: Get public profile
      responses:
        '200':
          description: Public profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProfileResponse'
              example:
                status: 200
                data:
                  content:
                    id: 15
                    userId: 1
                    listingShortDescription: Listing short description
                    companyLogo: >-
                      https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                    previewCardImage: >-
                      https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                    listingHeaderImage: >-
                      https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                    metrics:
                      Leads: 800
                      Looks: 144000
                      Facebook: 1500
                      Instgram: 1500
                      Twitter: 1500
                    completion: 66
                    createdAt: 2020-08-10T09:23:37.488Z
                    updatedAt: 2020-08-10T09:23:37.488Z
  /partner/public-profile/save:
    patch:
      tags:
        - Partner
      description: Save partner profile
      security:
        - Bearer: []
              
      requestBody:
        description: Partner profile
        content:
          application/json:
            schema:
              type: object
              properties:
                highlights:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                metrics:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                listingShortDescription:
                  type: string
                companyLogo:
                  type: string
                previewCardImage:
                  type: string
                listingHeaderImage:
                  type: string
          multipart/form-data:
            schema:
              type: object
              properties:
                highlights:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                metrics:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                listingShortDescription:
                  type: string
                companyLogo:
                  type: string
                previewCardImage:
                  type: string
                listingHeaderImage:
                  type: string
        required: false
      responses:
        '200':
          description: Public profile is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProfileResponse'
      x-codegen-request-body-name: Partner profile
  /partner/partner-profile:
    get:
      tags:
        - Partner
      description: Get partner profile
      responses:
        '200':
          description: Partner profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerProfileResponse'
              example:
                status: 200
                data:
                  content:
                    id: 4
                    userId: 4
                    companyDescription: MAYBE Codemotion
                    headquarterAddress: Upiter
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                    isAutomaticallyApprovedRequest: true
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                    monthlyVisitors: 15
                    monthlyCustomers: 13
                    amountOfOrders: 11
                    costOfOrder: 101
                    currency: USD
                    countries:
                      - Kuwait
                      - Saudi Arabia
                    cities:
                      - Riyadh
                      - Jeddah
                      - Mecca
                      - Al Ahmadi
                      - Hawalli
                    isSampleDistribution: true
                    pricePerSample: 89
                    isInsertDistribution: true
                    pricePerInsert: 150
                    warehouseAddresses:
                      - adress1 test 5
                      - adress2 test 6
                    isMediaBuy: true
                    createdAt: 2020-08-13T04:44:15.317Z
                    updatedAt: 2020-08-13T04:44:15.317Z
                    mediaBuyTypes:
                      - name: Push Notifications
                        description: desc2
                        avgImpressions: 10
                        width: 1000
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                    completion: 100
                    companyName: Codemotion
                    companyWebsite: codemotion.eu
                    capability: High reach & volume
                    industry: Moms & Babies
                    genderFocus:
                      Female: 3.5
                    ageGroups:
                      sdfsd: 0
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                    additional:
                      logisticPrice: valueAdditionla1
                      stickerCost: valueAdditionla2
                  message: Your operation is ended successfully
  /partner/partner-profile/save:
    patch:
      tags:
        - Partner
      description: Save partner profile
      security:
        - Bearer: []
              
      requestBody:
        description: Partner profile
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
          multipart/form-data:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
        required: false
      responses:
        '200':
          description: Partner profile is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerProfileResponse'
              example:
                status: 200
                data:
                  content:
                    id: 4
                    userId: 4
                    companyDescription: MAYBE Codemotion
                    headquarterAddress: Upiter
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                    isAutomaticallyApprovedRequest: true
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                    monthlyVisitors: 15
                    monthlyCustomers: 13
                    amountOfOrders: 11
                    costOfOrder: 101
                    currency: USD
                    countries:
                      - Kuwait
                      - Saudi Arabia
                    cities:
                      - Riyadh
                      - Jeddah
                      - Mecca
                      - Al Ahmadi
                      - Hawalli
                    isSampleDistribution: true
                    pricePerSample: 89
                    isInsertDistribution: true
                    pricePerInsert: 150
                    warehouseAddresses:
                      - adress1 test 5
                      - adress2 test 6
                    isMediaBuy: true
                    createdAt: 2020-08-13T04:44:15.317Z
                    updatedAt: 2020-08-13T04:44:15.317Z
                    mediaBuyTypes:
                      - name: Push Notifications
                        description: desc2
                        avgImpressions: 10
                        width: 1000
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                    completion: 100
                    companyName: Codemotion
                    companyWebsite: codemotion.eu
                    capability: High reach & volume
                    industry: Moms & Babies
                    genderFocus:
                      Female: 3.5
                    ageGroups:
                      sdfsd: 0
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                    additional:
                      logisticPrice: valueAdditionla1
                      stickerCost: valueAdditionla2
                  message: Your operation is ended successfully
        '400':
          description: Empty body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: 'Input params is wrong. Please, contact with your support'
        '409':
          description: 'Partner can see only own profile, not other partner'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 409
                error:
                  message: >-
                    The partner can check only their profile! Please, sign in
                    with another partner
      x-codegen-request-body-name: Partner profile
  /client/change-password:
    patch:
      tags:
        - Client
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /client/profile:
    get:
      tags:
        - Client
      description: Get client profile
      responses:
        '200':
          description: Client profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileResponse'
  /admin/common/change-password:
    patch:
      tags:
        - Admin
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /admin/client/get-settings:
    get:
      tags:
        - Admin
      description: Get all settings on client side for admin
      security:
        - Bearer: []
              
      responses:
        '200':
          description: All settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    ageGroups:
                      - 18-24 Early Youth
                      - 25-35 Young
                      - 36-45 Middle
                      - 46-55 Senior
                      - 55+ Elderly
                    segments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
  /admin/partner/get-settings:
    get:
      tags:
        - Partner Properties
      description: >-
        All constants that frontend to show for admin to upsert partner
        properties
      security:
        - Bearer: []
              
      responses:
        '200':
          description: All is ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    capabilities:
                      - High reach & volume
                      - Social Media Control
                      - Control Over Drivers
                      - In-App announcements
                      - Per-Request-Sampling
                      - Active users/Tech Savvy
                      - Users who like to explore (Explorers)
                      - Users with high response rate
                      - Users with high engagement
                    industries:
                      - Food Deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion & Beauty
                      - Clothing & Wearable
                      - Athletes & Willness
                      - Electronics & Tech
                      - Door to door delivery
                      - Ride hailing
                      - Pharmaceutical
                    segments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    genderFocus:
                      - Male
                      - Female
                    ageGroups:
                      - 18-24 Early Youth
                      - 25-35 Young
                      - 36-45 Middle
                      - 46-55 Senior
                      - 55+ Elderly
  /admin/age-groups/view/{id}:
    get:
      tags:
        - Admin-Age-Group
      description: Get age group details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with age group, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupResponse'
  /admin/age-groups/media:
    post:
      tags:
        - Admin-Age-Group
      description: Upload age group images
      security:
        - Bearer: []
              
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - files
                - id
              properties:
                id:
                  type: string
                  description: id of age of group
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
  '/admin/age-groups/media/{id}':
    get:
      tags:
        - Partner
      description: Get age group media according to params id on database and s3
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: >-
            Simple response with "Age group profile is deleted successfully."
            message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Age group media is deleted successfully.
  '/admin/age-groups/list':
    get:
      tags:
        - Admin-Age-Group
      description: Get list of age groups with details
      security:
        - Bearer: []
      responses:
        '200':
          description: 'Response with age group, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgeGroupResponse'
  /admin/age-groups/create:
    put:
      tags:
        - Admin-Age-Group
      description: >-
        Used to create age group and will get new age group id by admin. Can be
        used with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Age group object. Please check age group definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupCreateRequest'
        required: false
      responses:
        '200':
          description: Response with age group id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupResponse'
      x-codegen-request-body-name: ageGroup
  /admin/age-groups/edit:
    put:
      tags:
        - Admin-Age-Group
      description: >-
        Used to edit all age group fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Age group object. Please check age group definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
        required: false
      responses:
        '200':
          description: Response with age group id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupResponse'
      x-codegen-request-body-name: ageGroup
  '/admin/age-groups/delete/{id}':
    delete:
      tags:
        - Admin-Age-Group
      description: Delete age group according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Age group is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Age group is deleted successfully.
  /admin/segments/view/{id}:
    get:
      tags:
        - Admin-Segment
      description: Get segment details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with segment, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
  '/admin/segments/list':
    get:
      tags:
        - Admin-Segment
      description: Get list of segments with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: 'Response with segment, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SegmentResponse'
  /admin/segments/create:
    put:
      tags:
        - Admin-Segment
      description: >-
        Used to create segment and will get new segment id by admin. Can be used
        with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Segment object. Please check segment definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SegmentCreateRequest'
        required: false
      responses:
        '200':
          description: Response with segment id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
      x-codegen-request-body-name: segment
  /admin/segments/edit:
    put:
      tags:
        - Admin-Segment
      description: >-
        Used to edit all segment fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Segment object. Please check segment definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
        required: false
      responses:
        '200':
          description: Response with segment id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
      x-codegen-request-body-name: segment
  '/admin/segments/delete/{id}':
    delete:
      tags:
        - Admin-Segment
      description: Delete segment according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Segment is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Segment is deleted successfully.

  '/admin/roles/view/{id}':
    get:
      tags:
        - Admin-Role
      description: Get role details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with role, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
  '/admin/roles/list':
    get:
      tags:
        - Admin-Role
      description: Get list of roles with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: 'Response with role, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleResponse'
  /admin/roles/create:
    put:
      tags:
        - Admin-Role
      description: >-
        Used to create role and will get new role id by admin. Can be used
        with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Role object. Please check role definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
        required: false
      responses:
        '200':
          description: Response with role id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
      x-codegen-request-body-name: role
  /admin/roles/edit:
    put:
      tags:
        - Admin-Role
      description: >-
        Used to edit all role fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Role object. Please check role definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
        required: false
      responses:
        '200':
          description: Response with role id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
      x-codegen-request-body-name: role

  '/partner/request/open':
    get:
      tags:
        - Partner-Request
      description: Get list of open requests with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: 'Response with open requests, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionResponse'
  '/brief/view/{id}':
    get:
      tags:
        - Brief
      description: Get brief details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with brief, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    status: PENDING_APPROVAL
                    name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                    quantity: 0
                    briefStartDate: 2020-07-27T23:18:56.831Z
                    instructions: >-
                      73iwPjYo  PxZo Hr Wdfe  sj1c Um  2hvL  Gg9JlKfSa KV54bE 
                      KcN vF EcWG0Pao a  C 4dWW5x yBW hg   t bKP7
                    mediaStartDate: 2020-07-27T23:18:56.831Z
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages: []
                  message: Your operation is ended successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id must be a number
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  '/brief/delete/{id}':
    delete:
      tags:
        - Brief
      description: Delete brief according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Brief is deleted successfully.
        '400':
          description: Wrong status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    Brief can be only in rejected and pending status for
                    deleting
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /brief/remove-media:
    delete:
      tags:
        - Brief
      description: Delete brief media according to params id on database and s3
      security:
        - Bearer: []
              
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Brief media is deleted successfully.
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
      x-codegen-request-body-name: input
  /brief/brief-settings:
    get:
      tags:
        - Brief
      description: All data libraries we need till brief creation
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    distributionItems:
                      - Sample
                      - Insert
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    briefDurations:
                      - 2 Weeks
                      - 3 Weeks
                      - 1 Month
                      - 5 Weeks
                      - 6 Weeks
                      - 7 Weeks
                      - 2 Months Or More
                    mediaDurations:
                      - TBD
                    targetSegments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    targetCamapaigns:
                      - Wide Reach
                      - Niche Audience
                      - Brand Awareness
                      - Acquire New Customer
                      - Test New Product
                      - Feedback for a Product
                      - >-
                        Conversation to X (Customers who are more likely to take
                        action)
                      - Campaign with time limitation
                      - Campaign with long-duration-request rate
                      - Campaign with Brand Activation
                    ageGroups:
                      - Infants 5 years
                      - Children 6 years - 12 years
                      - Teens 13 years - 19 years
                      - Young 20 years - 35 years
                      - Middle 36 years - 55 years
                      - Elderly over 56 years
  /admin/brief/create:
    post:
      tags:
        - Admin-Brief
      description: >-
        Used to create brief and will get new brief id by admin. Can be used
        with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefCreateByAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefCreateByAdminRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefFirstCreation'
              example:
                status: 200
                data:
                  content:
                    briefId: 3
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: briefTypes must be an array
      x-codegen-request-body-name: brief
  '/admin/brief/view/{id}':
    get:
      tags:
        - Admin-Brief
      description: Get brief details according to params id by admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with brief, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    status: PENDING_APPROVAL
                    name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                    quantity: 0
                    briefStartDate: 2020-07-27T23:18:56.831Z
                    instructions: >-
                      73iwPjYo  PxZo Hr Wdfe  sj1c Um  2hvL  Gg9JlKfSa KV54bE 
                      KcN vF EcWG0Pao a  C 4dWW5x yBW hg   t bKP7
                    mediaStartDate: 2020-07-27T23:18:56.831Z
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages: []
                  message: Your operation is ended successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id must be a number
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /admin/brief/edit:
    put:
      tags:
        - Admin-Brief
      description: >-
        Used to edit all brief fields values by admin. This endpoint will update
        only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633181-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633187-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633190-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793423-Screenshot_from_2020-07-19_23-51-43.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793425-Screenshot_from_2020-07-20_00-06-18.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793427-Screenshot_from_2020-07-20_00-12-46.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793429-Screenshot_from_2020-07-23_09-19-55.png
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  '/admin/brief/edit-step/{step}':
    put:
      tags:
        - Admin-Brief
      description: >-
        Used to save client updates on every step. Now there is on checking on
        every step, so there is simple brief update by admin
      security:
        - Bearer: []
      parameters:   
        - name: step
          in: path
          required: true
          schema:
            type: string
            enum:
              - BRIEF_TYPE
              - BRIEF_PRODUCT
              - BRIEF_TARGETING
              - BRIEF_SERVICES
              - BRIEF_MEDIA_BUY
              - BRIEF_PARTNER
              - BRIEF_UPLOAD
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  '/admin/brief/delete/{id}':
    delete:
      tags:
        - Admin-Brief
      description: Delete brief according to params id by admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Brief is deleted successfully.
        '400':
          description: Wrong status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    Brief can be only in rejected and pending status for
                    deleting
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /admin/brief/list:
    get:
      tags:
        - Admin-Brief
      description: >-
        Used to get all available briefs. You can get only briefs only created
        by you. Example -
        /brief/list?status[]=draft&status[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:      
        - name: userId
          in: query
          schema:
            type: integer
        - name: isApproved
          in: query
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefList'
              example:
                status: 200
                data:
                  content:
                    briefs:
                      - id: 20
                        name: ' lnFXevK oP dxQvx jmy6wQo7Bo VbL   OC E '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:17:23.529Z
                        mediaStartDate: 2020-07-27T23:17:23.529Z
                        status: PARTIALLY_REJECTED
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028983-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028988-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028990-Screenshot_from_2020-06-06_23-29-51.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128221-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128227-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128229-Screenshot_from_2020-06-06_23-29-51.png
                      - id: 23
                        name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:18:56.831Z
                        mediaStartDate: 2020-07-27T23:18:56.831Z
                        status: PENDING_APPROVAL
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    total: 2
  '/admin/brief/download-media/{id}':
    get:
      tags:
        - Admin-Brief
      description: Download media according to params id by admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id must be a number
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /admin/brief/brief-settings:
    get:
      tags:
        - Admin-Brief
      description: All data libraries we need till brief creation by admin
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    distributionItems:
                      - Sample
                      - Insert
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    briefDurations:
                      - 2 Weeks
                      - 3 Weeks
                      - 1 Month
                      - 5 Weeks
                      - 6 Weeks
                      - 7 Weeks
                      - 2 Months Or More
                    mediaDurations:
                      - TBD
                    targetSegments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    targetCamapaigns:
                      - Wide Reach
                      - Niche Audience
                      - Brand Awareness
                      - Acquire New Customer
                      - Test New Product
                      - Feedback for a Product
                      - >-
                        Conversation to X (Customers who are more likely to take
                        action)
                      - Campaign with time limitation
                      - Campaign with long-duration-request rate
                      - Campaign with Brand Activation
                    ageGroups:
                      - Infants 5 years
                      - Children 6 years - 12 years
                      - Teens 13 years - 19 years
                      - Young 20 years - 35 years
                      - Middle 36 years - 55 years
                      - Elderly over 56 years
  '/admin/brief/partner/fetch/{id}':
    get:
      tags:
        - Admin-Brief
      description: >-
        Get all partners with Best Match algorithm regarding to this brief by
        admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Brief id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerList'
              example:
                status: 200
                data:
                  content:
                    - id: 4
                      userId: 2
                      companyDescription: Codemotion
                      headquarterAddress: Earth
                      socialMediaLinks:
                        - fb.com/example
                        - twitter.com/example
                      isAutomaticallyApprovedRequest: true
                      productCategories:
                        - Moms & Babies
                        - Electronics & Tech
                      monthlyVisitors: 8
                      monthlyCustomers: 11
                      amountOfOrders: 15
                      costOfOrder: 123
                      currency: AED
                      countries:
                        - Kuwait
                        - Saudi Arabia
                      cities:
                        - Riyadh
                        - Jeddah
                        - Mecca
                        - Al Ahmadi
                        - Hawalli
                      isSampleDistribution: true
                      pricePerSample: 324
                      isInsertDistribution: true
                      pricePerInsert: 120
                      warehouseAddresses:
                        - adress1 test 1
                        - adress2 test 2
                      isMediaBuy: true
                      mediaBuyTypes:
                        - Home Page Banners
                        - Cashback Offers
                      createdAt: 2020-08-13T04:44:15.317Z
                      updatedAt: 2020-08-13T04:44:15.317Z
                      props:
                        id: 6
                        capability: Control Over Drivers
                        industry: Fashion & Beauty
                        genderFocus:
                          Female: 3
                        ageGroups:
                          18-24 Early Youth: 2
                          25-35 Young: 4
                        segments:
                          Moms: 3
                          Fashion Focused: 4
                        additional:
                          logisticPrice: valueAdditionla1
                          stickerCost: valueAdditionla2
                        createdAt: 2020-08-13T04:44:15.324Z
                        updatedAt: 2020-08-13T04:44:15.324Z
                        partnerId: 4
                      user:
                        companyName: Codemotion
                        companyWebsite: codemotion.eu
                        status: ACTIVE
                        isBanned: false
                  message: Your operation is ended successfully
  /admin/brief/recommended-partners:
    get:
      tags:
        - Admin-Brief
      description: >-
        Used to filter to recommended partner list by admin. Example -
        /brief/filter-partner?briefId=25&categories[]=Food
        deliveries&categories[]=Moms %26 Babies
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: query
          description: Simple brief id on which we will find recommended partners
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Response with recommended partner list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedPartnerList'
              example:
                status: 200
                data:
                  content:
                    total: 1
                    partners:
                      - id: 4
                        userId: 2
                        companyWebsite: codemotion.eu
                        companyDescription: Listing short description
                        name: Codemotion
                        mainImageUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        logoUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        companyLabel: ECOMMERCE
                        match: 85
                        isSampleDistribution: true
                        pricePerSample: 324
                        isInsertDistribution: true
                        pricePerInsert: 120
                        currency: AED
                        links:
                          - fb.com/example
                          - twitter.com/example
                        social:
                          - name: Leads
                            counter: 800
                            url: fb.com/example3
                          - name: Looks
                            counter: 144000
                            url: instagram.com/exmaple3
                          - name: Fb
                            counter: 1500
                            url: fb.com/example3
                          - name: Instagram
                            counter: 1500
                            url: instagram.com/exmaple3
                          - name: Twitter
                            counter: 1500
                            url: twitter.com/example3
  /admin/brief/upload:
    post:
      tags:
        - Admin-Brief
      description: >-
        Upload brief` product, service and upload materilas (6th step) images by
        admin. No need to send result image array one more time to server, for
        example, save and send image array inside the /brief/create request.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
        '400':
          description: >-
            Validation error. All params is required. Wrong entity value is
            described in example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    entity must be one of [briefs_product_images,
                    briefs_service_images]
  /admin/brief/remove-media:
    delete:
      tags:
        - Admin-Brief
      description: Delete brief media according to params id on database and s3 by admin
      security:
        - Bearer: []
              
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Brief media is deleted successfully.
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
      x-codegen-request-body-name: input
  /admiin/brief/filter-settings:
    get:
      tags:
        - Admin-Brief
      description: Get all settings for filters on Partners step by admin
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    categories:
                      - Food deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion and Beauty
                      - Clothing & Wearable
                      - Athletes & Wiliness
                      - Electronics & Tech
                      - Door-To-Door Delivery
                      - Ride-Hailing
                      - Pharmaceutical
                    pricePerUnit:
                      - under $0.50
                      - $0.50 to $1.00
                      - $1.01 to $1.50
                      - $1.51 to $2.00
                      - $2.01 to $3.00
                      - Over $3.00
                    matches:
                      - 100% Match
                      - Above 90%
                      - Above 80%
                      - Above 70%
                      - Above 60%
                      - Above 50%
                      - Any
                    types:
                      - Brand Store (Brand bundle)
                      - Store Positioning
                      - Home Page Banners
                      - In App Banners
                      - SKU Uplifting
                      - Popup Window
                      - Push Notification
                      - Free Delivery
                      - Cashback Offers
                      - Paid SM Campaigns
                      - Price Off Promotion
                      - Online survey or campaign
                      - Branded Printing
                      - OOH - Media Partnership
                      - Email Blast
                    sortBy:
                      - desc
                      - asc
  '/admin/brief/media-buy-service/{briefId}':
    get:
      tags:
        - Admin-Brief
      description: >-
        Used for getting all info from cart and getting Media Buy Type info by
        admin. If you want to get more info, so, please, put it in cart
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: path
          description: Brief id for which we created this cart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart items with media types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    data:
                      - partnerId: 4
                        key: value
                        mediaTypes:
                          - id: 6
                            name: Home Page Banners
                            description: desc2
                            avgImpressions: 10
                            partnerId: 4
                            createdAt: 2020-08-18T10:32:24.198Z
                            updatedAt: 2020-08-18T10:32:24.198Z
                          - id: 7
                            name: Push Notifications
                            description: desc2
                            avgImpressions: 10
                            width: 1000
                            partnerId: 4
                            createdAt: 2020-08-18T10:58:18.542Z
                            updatedAt: 2020-08-18T10:58:18.542Z
                  message: Your operation is ended successfully
  /admin/brief/bill/edit:
    put:
      tags:
        - Admin-Bill
      description: >-
        Used to edit all bill fields values.
      security:
        - Bearer: []
              
      requestBody:
        description: Bill object. Please check Bill definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillEditRequest'
        required: false
  /admin/brief/bill/list:
    get:
      tags:
        - Admin-Bill
      description: >-
        Used to get all available bills. Example -
        /brief/bill/list?status[]=draft&paymentStatus[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
        - name: isApproved
          in: query
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: 'paymentStatus[]'
          in: query
          description: >-
            Array of payment statuses to filter bill list. Can be used like -
            "paymentStatus[]=REJECTED&paymentStatus[]=PENDING"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillListItem'
  '/notifications/list':
    get:
      tags:
        - Notification
      description: Get list of notifications with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: >-
            Response with notification, if available. Empty object in another
            way
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponse'
  /notifications/create:
    put:
      tags:
        - Notification
      description: >-
        Used to create notification and will get new notification id by admin.
        Can be used with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: >-
          Notification object. Please check notification definition or swagger
          file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
        required: false
      responses:
        '200':
          description: Response with Notification id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
      x-codegen-request-body-name: notification
  /notifications/edit:
    put:
      tags:
        - Notification
      description: >-
        Used to edit all notification fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: >-
          Notification object. Please check notification definition or swagger
          file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationEditRequest'
        required: false
      responses:
        '200':
          description: Response with notification id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
      x-codegen-request-body-name: notification
  '/notifications/delete/{id}':
    delete:
      tags:
        - Notification
      description: Delete notification according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Notification is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Notification is deleted successfully.
  /brief/create:
    post:
      tags:
        - Brief
      description: >-
        Used to create brief and will get new brief id. Can be used with all
        available fields
      security:
        - Bearer: []
              
      requestBody:
        description: >-
          Brief object. Please check Brief definition or swagger file. All
          description goes from confluence,
          https://codemotion.atlassian.net/wiki/spaces/QUAN/pages/1748730324/Brief
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefCreateRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefFirstCreation'
              example:
                status: 200
                data:
                  content:
                    briefId: 3
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: briefTypes must be an array
      x-codegen-request-body-name: brief
  /brief/list:
    get:
      tags:
        - Brief
      description: >-
        Used to get all available briefs. You can get only briefs only created
        by you. Example -
        /brief/list?status[]=draft&status[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefList'
              example:
                status: 200
                data:
                  content:
                    briefs:
                      - id: 20
                        name: ' lnFXevK oP dxQvx jmy6wQo7Bo VbL   OC E '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:17:23.529Z
                        mediaStartDate: 2020-07-27T23:17:23.529Z
                        status: PARTIALLY_REJECTED
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028983-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028988-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028990-Screenshot_from_2020-06-06_23-29-51.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128221-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128227-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128229-Screenshot_from_2020-06-06_23-29-51.png
                      - id: 23
                        name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:18:56.831Z
                        mediaStartDate: 2020-07-27T23:18:56.831Z
                        status: PENDING_APPROVAL
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    total: 2
  /brief/edit:
    put:
      tags:
        - Brief
      description: >-
        Used to edit all brief fields values. This endpoint will update only in
        case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633181-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633187-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633190-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793423-Screenshot_from_2020-07-19_23-51-43.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793425-Screenshot_from_2020-07-20_00-06-18.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793427-Screenshot_from_2020-07-20_00-12-46.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793429-Screenshot_from_2020-07-23_09-19-55.png
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  /brief/test-timezone:
    post:
      tags:
        - Brief
      description: Test endpoint for understanding how to work with time and timezones
      security:
        - Bearer: []
              
      requestBody:
        description: All settings to play with time
        content:
          application/json:
            schema:
              type: object
              properties:
                isUnix:
                  type: boolean
                  description: >-
                    You must check additionally if you type in unix time. False
                    by default
                timezone:
                  type: number
                date:
                  type: string
          multipart/form-data:
            schema:
              type: object
              properties:
                isUnix:
                  type: boolean
                  description: >-
                    You must check additionally if you type in unix time. False
                    by default
                timezone:
                  type: number
                date:
                  type: string
        required: false
      responses:
        '200':
          description: The response with all results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    formatInput: '1596015482, 1596014913857, 2020-07-29T07:58:29.616Z'
                    formatOutput: 'Jul 29, 2020'
                    utc: 2020-07-29T09:28:33.000Z
                    local: 2020-07-29T09:28:33.000Z
      x-codegen-request-body-name: time-settings
  /brief/upload:
    post:
      tags:
        - Brief
      description: >-
        Upload brief` product, service and upload materilas (6th step) images.
        No need to send result image array one more time to server, for example,
        save and send image array inside the /brief/create request.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
        '400':
          description: >-
            Validation error. All params is required. Wrong entity value is
            described in example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    entity must be one of [briefs_product_images,
                    briefs_service_images]
  '/brief/edit-step/{step}':
    put:
      tags:
        - Brief
      description: >-
        Used to save client updates on every step. Now there is on checking on
        every step, so there is simepl brief update
      security:
        - Bearer: []
      parameters:
        - name: step
          in: path
          required: true
          schema:
            type: string
            enum:
              - BRIEF_TYPE
              - BRIEF_PRODUCT
              - BRIEF_TARGETING
              - BRIEF_SERVICES
              - BRIEF_MEDIA_BUY
              - BRIEF_PARTNER
              - BRIEF_UPLOAD
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  /brief/filter-settings:
    get:
      tags:
        - Brief
      description: Get all settings for filters on Partners step
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    categories:
                      - Food deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion and Beauty
                      - Clothing & Wearable
                      - Athletes & Wiliness
                      - Electronics & Tech
                      - Door-To-Door Delivery
                      - Ride-Hailing
                      - Pharmaceutical
                    pricePerUnit:
                      - under $0.50
                      - $0.50 to $1.00
                      - $1.01 to $1.50
                      - $1.51 to $2.00
                      - $2.01 to $3.00
                      - Over $3.00
                    matches:
                      - 100% Match
                      - Above 90%
                      - Above 80%
                      - Above 70%
                      - Above 60%
                      - Above 50%
                      - Any
                    types:
                      - Brand Store (Brand bundle)
                      - Store Positioning
                      - Home Page Banners
                      - In App Banners
                      - SKU Uplifting
                      - Popup Window
                      - Push Notification
                      - Free Delivery
                      - Cashback Offers
                      - Paid SM Campaigns
                      - Price Off Promotion
                      - Online survey or campaign
                      - Branded Printing
                      - OOH - Media Partnership
                      - Email Blast
                    sortBy:
                      - desc
                      - asc
  '/brief/partner/fetch/{id}':
    get:
      tags:
        - Brief
      description: Get all partners with Best Match algorithm regarding to this brief
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Brief id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerList'
              example:
                status: 200
                data:
                  content:
                    - id: 4
                      userId: 2
                      companyDescription: Codemotion
                      headquarterAddress: Earth
                      socialMediaLinks:
                        - fb.com/example
                        - twitter.com/example
                      isAutomaticallyApprovedRequest: true
                      productCategories:
                        - Moms & Babies
                        - Electronics & Tech
                      monthlyVisitors: 8
                      monthlyCustomers: 11
                      amountOfOrders: 15
                      costOfOrder: 123
                      currency: AED
                      countries:
                        - Kuwait
                        - Saudi Arabia
                      cities:
                        - Riyadh
                        - Jeddah
                        - Mecca
                        - Al Ahmadi
                        - Hawalli
                      isSampleDistribution: true
                      pricePerSample: 324
                      isInsertDistribution: true
                      pricePerInsert: 120
                      warehouseAddresses:
                        - adress1 test 1
                        - adress2 test 2
                      isMediaBuy: true
                      mediaBuyTypes:
                        - Home Page Banners
                        - Cashback Offers
                      createdAt: 2020-08-13T04:44:15.317Z
                      updatedAt: 2020-08-13T04:44:15.317Z
                      props:
                        id: 6
                        capability: Control Over Drivers
                        industry: Fashion & Beauty
                        genderFocus:
                          Female: 3
                        ageGroups:
                          18-24 Early Youth: 2
                          25-35 Young: 4
                        segments:
                          Moms: 3
                          Fashion Focused: 4
                        additional:
                          logisticPrice: valueAdditionla1
                          stickerCost: valueAdditionla2
                        createdAt: 2020-08-13T04:44:15.324Z
                        updatedAt: 2020-08-13T04:44:15.324Z
                        partnerId: 4
                      user:
                        companyName: Codemotion
                        companyWebsite: codemotion.eu
                        status: ACTIVE
                        isBanned: false
                  message: Your operation is ended successfully
  /brief/recommended-partners:
    get:
      tags:
        - Brief
      description: >-
        Used to filter to recommended partner list. Example -
        /brief/filter-partner?briefId=25&categories[]=Food
        deliveries&categories[]=Moms %26 Babies
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: query
          description: Simple brief id on which we will find recommended partners
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Response with recommended partner list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedPartnerList'
              example:
                status: 200
                data:
                  content:
                    total: 1
                    partners:
                      - id: 4
                        userId: 2
                        companyWebsite: codemotion.eu
                        companyDescription: Listing short description
                        name: Codemotion
                        mainImageUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        logoUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        companyLabel: ECOMMERCE
                        match: 85
                        isSampleDistribution: true
                        pricePerSample: 324
                        isInsertDistribution: true
                        pricePerInsert: 120
                        currency: AED
                        links:
                          - fb.com/example
                          - twitter.com/example
                        social:
                          - name: Leads
                            counter: 800
                            url: fb.com/example3
                          - name: Looks
                            counter: 144000
                            url: instagram.com/exmaple3
                          - name: Fb
                            counter: 1500
                            url: fb.com/example3
                          - name: Instagram
                            counter: 1500
                            url: instagram.com/exmaple3
                          - name: Twitter
                            counter: 1500
                            url: twitter.com/example3
  '/cart/view-briefId/{id}':
    get:
      tags:
        - Cart
      description: >-
        Please, put all data inside the additional field. After you will get
        full understanding about data structures you will use, we will refactor
        this part
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Brief id for which we created this cart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    additional:
                      items:
                        - partnerId: 4
                          key: value
                    briefId: 28
                  message: Your operation is ended successfully
  /cart/upsert:
    post:
      tags:
        - Cart
      description: >-
        Used for creating/updating carts. Can throw standart erros regarding to
        bad input
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                additional:
                  type: object
                  properties: {}
                  description: Put all you want
                  example:
                    additional:
                      briefId: 28
                      additional:
                        items:
                          - partnerId: 4
                            key: value
          multipart/form-data:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                additional:
                  type: object
                  properties: {}
                  description: Put all you want
                  example:
                    additional:
                      briefId: 28
                      additional:
                        items:
                          - partnerId: 4
                            key: value
        required: false
      responses:
        '200':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    cart:
                      additional:
                        items:
                          - partnerId: 4
                            key: value
                      briefId: 28
                  message: Cart is updated successfully.
      x-codegen-request-body-name: input
  '/brief/media-buy-service/{briefId}':
    get:
      tags:
        - Brief
      description: >-
        Used for getting all info from cart and getting Media Buy Type info. If
        you want to get more info, so, please, put it in cart
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: path
          description: Brief id for which we created this cart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart items with media types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    data:
                      - partnerId: 4
                        key: value
                        mediaTypes:
                          - id: 6
                            name: Home Page Banners
                            description: desc2
                            avgImpressions: 10
                            partnerId: 4
                            createdAt: 2020-08-18T10:32:24.198Z
                            updatedAt: 2020-08-18T10:32:24.198Z
                          - id: 7
                            name: Push Notifications
                            description: desc2
                            avgImpressions: 10
                            width: 1000
                            partnerId: 4
                            createdAt: 2020-08-18T10:58:18.542Z
                            updatedAt: 2020-08-18T10:58:18.542Z
                  message: Your operation is ended successfully
  /brief/bill/list:
    get:
      tags:
        - Bill
      description: >-
        Used to get all available bills. Example -
        /brief/bill/list?status[]=draft&paymentStatus[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
        - name: isApproved
          in: query
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: 'paymentStatus[]'
          in: query
          description: >-
            Array of payment statuses to filter bill list. Can be used like -
            "paymentStatus[]=REJECTED&paymentStatus[]=PENDING"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                type: array
                bills:
                  $ref: '#/components/schemas/BillListItem'
  /brief/bill/edit:
    put:
      tags:
        - Bill
      description: >-
        Used to edit all bill fields values.
      security:
        - Bearer: []
              
      requestBody:
        description: Bill object. Please check Bill definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillEditRequest'
        required: false
  '/notifications/view/{id}':
    get:
      tags:
        - Notification
      description: Get notification details according to params id
      security:
        - Bearer: []
      parameters:  
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Response with notification, if available. Empty object in another
            way
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
  /admin/partner/upsert-properties-partner-id:
    post:
      tags:
        - Partner Properties
      description: >-
        Insert or update partner properties info by partner id. One-to-one
        relation with Partner object. Only for admins
      security:
        - Bearer: []
              
      responses:
        '200':
          description: >-
            Response with brief id and result props (you need it in updating
            cases)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPropsUpsertResponse'
              example:
                status: 200
                data:
                  content:
                    propertiesId: 1
                    result:
                      id: 1
                      capability: test-capability3
                      industry: test-industry
                      genderFocus:
                        key: valueGender
                      ageGroups:
                        key: valueAge
                      segments:
                        key: valueSegments
                      additional:
                        logisticPrice: valueAdditionla1
                        stickerCost: valueAdditionla2
                      partnerId: 512
                      updatedAt: 2020-08-03T06:30:37.665Z
                      createdAt: 2020-08-03T05:29:58.388Z
        '409':
          description: You can't create one more props for this Partner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 409
                error:
                  message: >-
                    This partner have created properties object already. Please,
                    use that object!
  '/admin/partner/properties/{id}':
    get:
      tags:
        - Partner Properties
      description: Get partner properties info by partner id. Only for admins
      security:
        - Bearer: []
      parameters:     
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPropsDetail'
              example:
                status: 200
                data:
                  content:
                    id: 1
                    capability: test-capability3
                    industry: test-industry
                    genderFocus:
                      key: valueGender
                    ageGroups:
                      key: valueAge
                    segments:
                      key: valueSegments
                    additional:
                      logisticPrice: valueAdditionla1
                      stickerCost: valueAdditionla2
                    createdAt: 2020-08-03T05:29:58.388Z
                    updatedAt: 2020-08-03T06:30:37.665Z
                    partnerId: 512
  /client/profile/save:
    patch:
      tags:
        - Client
      description: Save client profile
      security:
        - Bearer: []
              
      requestBody:
        description: Partner profile
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
          multipart/form-data:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
        required: false
      responses:
        '200':
          description: Partner profile is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileResponse'
      x-codegen-request-body-name: Partner profile
  /admin/partner/upsert-properties-user-id:
    post:
      tags:
        - Partner Properties
      description: >-
        Insert or update partner properties info by user id. One-to-one relation
        with Partner object. Only for admins
      security:
        - Bearer: []
              
      requestBody:
        description: Partner Properties object. You will update object if you send id
        content:
          application/json:
            schema:
              type: object
              example:
                application/json:
                  capability: test-capability3
                  industry: test-industry
                  genderFocus:
                    key: valueGender
                  ageGroups:
                    key: valueAge
                  segments:
                    key: valueSegments
                  additional:
                    logisticPrice: valueAdditionla1
                    stickerCost: valueAdditionla2
                  userId: 512
          multipart/form-data:
            schema:
              type: object
              example:
                application/json:
                  capability: test-capability3
                  industry: test-industry
                  genderFocus:
                    key: valueGender
                  ageGroups:
                    key: valueAge
                  segments:
                    key: valueSegments
                  additional:
                    logisticPrice: valueAdditionla1
                    stickerCost: valueAdditionla2
                  userId: 512
        required: true
      responses:
        '200':
          description: >-
            Response with brief id and result props (you need it in updating
            cases)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPropsUpsertResponse'
              example:
                status: 200
                data:
                  content:
                    propertiesId: 1
                    result:
                      id: 1
                      capability: test-capability3
                      industry: test-industry
                      genderFocus:
                        key: valueGender
                      ageGroups:
                        key: valueAge
                      segments:
                        key: valueSegments
                      additional:
                        logisticPrice: valueAdditionla1
                        stickerCost: valueAdditionla2
                      partnerId: 512
                      updatedAt: 2020-08-03T06:30:37.665Z
                      createdAt: 2020-08-03T05:29:58.388Z
        '409':
          description: You can't create one more props for this Partner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 409
                error:
                  message: >-
                    This partner have created properties object already. Please,
                    use that object!
      x-codegen-request-body-name: input
components:
  schemas:
    BaseSuccessResponse:
      type: object
      properties:
        status:
          type: number
        data:
          type: object
          properties:
            message:
              type: string
            content:
              type: object
              properties: {}
    BaseErrorResponse:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties:
            message:
              type: string
            payload:
              type: object
              properties: {}
    ActivateAccountRequest:
      type: object
      properties:
        token:
          type: string
    ActivateAccountResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    RestorePasswordRequest:
      type: object
      properties:
        email:
          type: string
    RestorePasswordResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    ChangePasswordRequest:
      type: object
      properties:
        token:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    UpdatePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string
    NotificationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/Notification'
    NotificationEditRequest:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
          default: NOTIFICATION
          enum:
            - NOTIFICATION
            - ERROR
            - SUCCESS
            - SYSTEM
    NotificationCreateRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
        title:
          type: string
        description:
          type: string
        type:
          type: string
          default: NOTIFICATION
          enum:
            - NOTIFICATION
            - ERROR
            - SUCCESS
            - SYSTEM
    Notification:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
          default: NOTIFICATION
          enum:
            - NOTIFICATION
            - ERROR
            - SUCCESS
            - SYSTEM
        status:
          type: string
          default: UNREAD
          enum:
            - READ
            - UNREAD
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AgeGroupResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    AgeGroupEditRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    AgeGroupCreateRequest:
      type: object
      properties:
        name:
          type: string
    SegmentResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    SegmentEditRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    SegmentCreateRequest:
      type: object
      properties:
        name:
          type: string

    PermissionResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    RoleResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    RoleEditRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    RoleCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    ClientsListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
    PartnersListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
    ChangePasswordResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    CurrenciesRatesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties: {}
    RegistrationRequest:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        phone:
          type: string
        password:
          type: string
        role:
          type: string
    RegistrationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    BriefEditStepRequest:
      type: object
      properties:
        briefTypes:
          type: array
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          id: 41
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    BillEditRequest:
      type: object
      properties:
        id:
          type: number
        briefId:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: number
        po:
          type: array
        quotation:
          type: string
        reason:
          type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - PAID
      example:
        application/json:
          briefId: 744
          createdAt: "2021-08-23T12:33:34.871Z"
          id: 907
          po: 
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
          quotation: "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629722013879-quotation.pdf"
          reason: "Second reason"
          status: "REJECTED"
          updatedAt: "2021-08-23T13:50:49.129Z"
          updatedBy: 1
          bankTransfer:
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
    BriefEditRequest:
      type: object
      properties:
        id:
          type: number
        briefTypes:
          type: array
          description: Zero step in design
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          id: 41
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    BriefCreateRequest:
      type: object
      properties:
        id:
          type: number
        briefTypes:
          type: array
          description: Zero step in design
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    BriefCreateByAdminRequest:
      type: object
      properties:
        id:
          type: number
        clientId:
          type: number
        briefTypes:
          type: array
          description: Zero step in design
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    LoginResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    token:
                      type: string
                    role:
                      type: string
                    email:
                      type: string
    UploadMediaResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties: {}
    MediaResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties: {}
    PublicProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    id:
                      type: string
                    userId:
                      type: string
                    highlights:
                      type: array
                      items:
                        type: string
                    metrics:
                      type: object
                      properties: {}
                    listingShortDescription:
                      type: string
                    companyLogo:
                      type: string
                    previewCardImage:
                      type: string
                    listingHeaderImage:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
    PartnerProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/PartnerProfile'
    ClientProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    id:
                      type: string
                    userId:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    companyName:
                      type: string
                    companyWebsite:
                      type: string
                    profilePicture:
                      type: string
                    location:
                      type: string
                    productTypes:
                      type: array
                      items:
                        type: string
                    genderFocus:
                      type: array
                      items:
                        type: string
                    ageGroups:
                      type: array
                      items:
                        type: string
                    segments:
                      type: array
                      items:
                        type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
    BanResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    UnbanResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    RedirectURLResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    AuthorizedUserResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        birthday:
          type: string
          format: date-time
        identificationCode:
          type: string
        address:
          type: string
        phone:
          type: string
        hasPassedTest:
          type: boolean
        role:
          type: string
          default: CLIENT
          enum:
            - ADMIN
            - PARTNER
            - CLIENT
        status:
          type: string
          default: INACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - REMOVED
        completion:
          type: object
          properties:
            client:
              type: number
            partner:
              type: number
            public:
              type: number
        createdAt:
          type: string
          format: date-time
    Token:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        token:
          type: string
        expTime:
          type: string
        type:
          type: string
        status:
          type: string
          default: INACTIVE
          enum:
            - NEW
            - USED
            - EXPIRED
        createdAt:
          type: string
          format: date-time
    Brief:
      type: object
      properties:
        briefTypes:
          type: array
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: string
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: array
          description: Campaign objective (Drop won with radio buttons)
          items:
            type: string
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          description: >-
            Need for frontend part for saving and using last step user is filled
            before
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/User'
        updatedBy:
          $ref: '#/components/schemas/User'
      description: >-
        All description goes from confluence,
        https://codemotion.atlassian.net/wiki/spaces/QUAN/pages/1748730324/Brief
    BriefListItem:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: string
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        payment:
          type: object
          properties:
            status:
              type: string
              enum:
                - REJECTED
                - PENDING
                - PAID
    BillListItem:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: string
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        payment:
          type: object
          properties:
            id:
              type: number
            briefId:
              type: number
            createdAt:
              type: string
            updatedAt:
              type: string
            updatedBy:
              type: number
            po:
              type: array
            quotation:
              type: string
            reason:
              type: string
            status:
              type: string
              enum:
                - REJECTED
                - PENDING
                - PAID
    BriefDetailsSuccessResponse:
      type: object
      properties:
        status:
          type: number
        data:
          type: object
          properties:
            message:
              type: string
            content:
              $ref: '#/components/schemas/Brief'
    BriefFirstCreation:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    briefId:
                      type: number
    BriefList:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties: {}
        data:
          type: object
          properties:
            content:
              type: object
              properties:
                briefs:
                  type: array
                  items:
                    $ref: '#/components/schemas/BriefListItem'
                total:
                  type: number
            message:
              type: string
    PartnerProps:
      type: object
      properties:
        id:
          type: number
        capability:
          type: string
        industry:
          type: string
        genderFocus:
          type: object
          properties: {}
        ageGroups:
          type: object
          properties: {}
        segments:
          type: object
          properties: {}
        additional:
          type: object
          properties: {}
        partnerId:
          type: number
        updatedAt:
          type: string
          format: date-time
        createdAt":
          type: string
          format: date-time
    PartnerPropsUpsertResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    propertiesId:
                      type: number
                    result:
                      $ref: '#/components/schemas/PartnerProps'
    PartnerPropsDetail:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/PartnerProps'
    BriefUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    AgeGroupUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    PublicProfileUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    ClientProfileUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    PartnerProfile:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        companyDescription:
          type: string
        headquarterAddress:
          type: string
        socialMediaLinks:
          type: array
          items:
            type: string
        isAutomaticallyApprovedRequest:
          type: boolean
        productCategories:
          type: array
          items:
            type: string
        monthlyVisitors:
          type: number
        monthlyCustomers:
          type: number
        amountOfOrders:
          type: number
        costOfOrder:
          type: number
        currency:
          type: string
        genders:
          type: array
          items:
            type: string
        ageGroups:
          type: array
          items:
            type: string
        targetSegments:
          type: array
          items:
            type: string
        countries:
          type: array
          items:
            type: string
        cities:
          type: array
          items:
            type: string
        isSampleDistribution:
          type: boolean
        pricePerSample:
          type: number
        isInsertDistribution:
          type: boolean
        pricePerInsert:
          type: number
        warehouseAddresses:
          type: array
          items:
            type: string
        isMediaBuy:
          type: boolean
        mediaBuyTypes:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PartnerList:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties: {}
        data:
          type: object
          properties:
            content:
              type: object
              properties:
                briefs:
                  type: array
                  items:
                    type: object
                    properties: {}
            message:
              type: string
    RecommendedPartnerList:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties: {}
        data:
          type: object
          properties:
            content:
              type: object
              properties:
                total:
                  type: number
                partners:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                      userId:
                        type: number
                      companyWebsite:
                        type: string
                      companyDescription:
                        type: string
                      name:
                        type: string
                      mainImageUrl:
                        type: string
                      logoUrl:
                        type: string
                      companyLabel:
                        type: string
                        enum:
                          - ECOMMERCE
                      match:
                        type: number
                      isSampleDistribution:
                        type: boolean
                      pricePerSample:
                        type: number
                      isInsertDistribution:
                        type: boolean
                      pricePerInsert:
                        type: number
                      currency:
                        type: string
                      links:
                        type: array
                        items:
                          type: string
                      social:
                        type: object
                        properties: {}
            message:
              type: string
    Cart:
      type: object
      properties:
        briefId:
          type: number
        additional:
          type: object
          properties: {}
  parameters:
    Authorization:
      name: authorization
      in: header
      required: true
      schema:
        type: string
        default: >-
          Bearer
          
    AdminAuthorization:
      name: authorization
      in: header
      required: true
      schema:
        type: string
        default: >-
          Bearer
          
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    offset:
      name: offset
      in: query
      schema:
        type: number
    limit:
      name: limit
      in: query
      schema:
        type: number
    search:
      name: search
      in: query
      schema:
        type: string
    order:
      name: order
      in: query
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc
    orderBy:
      name: openapi: '3.0.0'
info:
  title: Quantum Swagger
  version: '1.0'
servers:
  - url: /api/v1
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /auth/sign-up:
    post:
      tags:
        - Registration
      description: Create a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        '200':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
      x-codegen-request-body-name: body
  /auth/activate-account:
    post:
      tags:
        - Registration
      description: Activate account via email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivateAccountRequest'
        required: true
      responses:
        '200':
          description: Activate user account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateAccountResponse'
      x-codegen-request-body-name: body
  /auth/sign-in:
    post:
      tags:
        - Login
      description: User client login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Sign-in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      x-codegen-request-body-name: body
  /auth/restore-password:
    post:
      tags:
        - Restore password
      description: Restore password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RestorePasswordRequest'
        required: true
      responses:
        '200':
          description: Restore user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePasswordResponse'
      x-codegen-request-body-name: body
  /auth/change-password:
    post:
      tags:
        - Restore password
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /rates:
    get:
      tags:
        - Currencies
      description: Get rates
      responses:
        '200':
          description: Current rates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrenciesRatesResponse'
  /client/current:
    get:
      tags:
        - Client
      description: Get authorized client info
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized client object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedUserResponse'
  /client/get-settings:
    get:
      tags:
        - Client
      description: Get all settings on client side
      components:
        security:
        - Bearer: []
      responses:
        '200':
          description: All settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    ageGroups:
                      - 18-24 Early Youth
                      - 25-35 Young
                      - 36-45 Middle
                      - 46-55 Senior
                      - 55+ Elderly
                    segments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
  /partner/current:
    get:
      tags:
        - Partner
      description: Get authorized partner info
      components:
        security:
        - Bearer: []
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedUserResponse'
  /partner/change-password:
    patch:
      tags:
        - Partner
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /partner/public-profile/upload:
    post:
      tags:
        - Partner
      description: Upload public partner profile images
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProfileUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
  /client/profile/upload:
    post:
      tags:
        - Client
      description: Upload client profile images
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
  /partner/get-settings:
    get:
      tags:
        - Partner
      description: >-
        Get all settings you need for partner. By the way, you have three
        countries, in example they are removed for output simlicity
      components:
        security:
        - Bearer: []
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    productCategoties:
                      - Food deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion and Beauty
                      - Clothing & Wearable
                      - Athletes & Wiliness
                      - Electronics & Tech
                      - Door-To-Door Delivery
                      - Ride-Hailing
                      - Pharmaceutical
                    currencies:
                      - USD
                      - AED
                      - SAR
                    targetSegments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    mediaTypes:
                      - Brand Store (Brand bundle)
                      - Store Positioning
                      - Home Page Banners
                      - In App Banners
                      - SKU Uplifting
                      - Popup Window
                      - Push Notification
                      - Free Delivery
                      - Cashback Offers
                      - Paid SM Campaigns
                      - Price Off Promotion
                      - Online survey or campaign
                      - Branded Printing
                      - OOH - Media Partnership
                      - Email Blast
                    countries:
                      - id: 1
                        name: Saudi Arabia
                        created_at: 2020-08-06T15:11:04.788Z
                        updated_at: 2020-08-06T15:11:04.788Z
                        city:
                          - id: 15
                            country_id: 1
                            name: Ha'il
                            lat: 27.5219
                            lng: 41.6907
                            created_at: 2020-08-06T15:11:04.804Z
                            updated_at: 2020-08-06T15:11:04.804Z
                          - id: 27
                            country_id: 1
                            name: Al Bahah
                            lat: 20.0129
                            lng: 41.4677
                            created_at: 2020-08-06T15:11:04.813Z
                            updated_at: 2020-08-06T15:11:04.813Z
  /admin/user/clients-list:
    get:
      tags:
        - Admin
      description: Get all clients
      components:
        security:
        - Bearer: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
        - name: order
          in: query
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: orderBy
          in: query
          schema:
            type: string
      responses:
        '200':
          description: All clients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientsListResponse'
  /partner/public-profile/media:
    delete:
      tags:
        - Partner
      description: >-
        Delete public partner profile media according to params id on database
        and s3
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  publicProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  publicProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/public_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: >-
            Simple response with "Public partner profile is deleted
            successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Public partner profile media is deleted successfully.
        '404':
          description: >-
            No public partner profile with this id or client profile has another
            owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Public partner profile has another owner. Can't fetch this
                    public partner profile with this credentials.
      x-codegen-request-body-name: input
  /client/profile/media:
    delete:
      tags:
        - Client
      description: Delete client profile media according to params id on database and s3
      components:
        security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  clientProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  clientProfileId: '2'
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/client_profile_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: >-
            Simple response with "Client profile is deleted successfully."
            message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Client profile media is deleted successfully.
        '404':
          description: No client profile with this id or client profile has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Client profile has another owner. Can't fetch this client
                    profile with this credentials.
      x-codegen-request-body-name: input
  /admin/user/partners-list:
    get:
      tags:
        - Admin
      description: Get all partners
      security:
        - Bearer: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
        - name: order
          in: query
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: orderBy
          in: query
          schema:
            type: string
      responses:
        '200':
          description: All partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnersListResponse'
  /admin/common/current:
    get:
      tags:
        - Admin
      description: Get authorized admin info
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized admin object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedUserResponse'
  /admin/users/ban:
    patch:
      tags:
        - Admin
      description: Ban user
      security:
        - Bearer: []
              
      requestBody:
        description: User id for ban
        content:
          application/json:
            schema:
              type: string
          multipart/form-data:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: User is banned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BanResponse'
      x-codegen-request-body-name: userId
  /admin/users/unban:
    patch:
      tags:
        - Admin
      description: Unban user
      security:
        - Bearer: []
              
      requestBody:
        description: User id for ban
        content:
          application/json:
            schema:
              type: string
          multipart/form-data:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: User is unbanned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
      x-codegen-request-body-name: userId
  '/admin/requests/approve/{userId}':
    patch:
      tags:
        - Admin
      description: Approve user account
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: path
          description: User id for approve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User is approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
  '/admin/requests/decline/{userId}':
    patch:
      tags:
        - Admin
      description: Decline user account
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: path
          description: User id for decline
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User is declined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
  /partner/public-profile:
    get:
      tags:
        - Partner
      description: Get public profile
      responses:
        '200':
          description: Public profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProfileResponse'
              example:
                status: 200
                data:
                  content:
                    id: 15
                    userId: 1
                    listingShortDescription: Listing short description
                    companyLogo: >-
                      https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                    previewCardImage: >-
                      https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                    listingHeaderImage: >-
                      https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                    metrics:
                      Leads: 800
                      Looks: 144000
                      Facebook: 1500
                      Instgram: 1500
                      Twitter: 1500
                    completion: 66
                    createdAt: 2020-08-10T09:23:37.488Z
                    updatedAt: 2020-08-10T09:23:37.488Z
  /partner/public-profile/save:
    patch:
      tags:
        - Partner
      description: Save partner profile
      security:
        - Bearer: []
              
      requestBody:
        description: Partner profile
        content:
          application/json:
            schema:
              type: object
              properties:
                highlights:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                metrics:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                listingShortDescription:
                  type: string
                companyLogo:
                  type: string
                previewCardImage:
                  type: string
                listingHeaderImage:
                  type: string
          multipart/form-data:
            schema:
              type: object
              properties:
                highlights:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                metrics:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                listingShortDescription:
                  type: string
                companyLogo:
                  type: string
                previewCardImage:
                  type: string
                listingHeaderImage:
                  type: string
        required: false
      responses:
        '200':
          description: Public profile is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProfileResponse'
      x-codegen-request-body-name: Partner profile
  /partner/partner-profile:
    get:
      tags:
        - Partner
      description: Get partner profile
      responses:
        '200':
          description: Partner profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerProfileResponse'
              example:
                status: 200
                data:
                  content:
                    id: 4
                    userId: 4
                    companyDescription: MAYBE Codemotion
                    headquarterAddress: Upiter
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                    isAutomaticallyApprovedRequest: true
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                    monthlyVisitors: 15
                    monthlyCustomers: 13
                    amountOfOrders: 11
                    costOfOrder: 101
                    currency: USD
                    countries:
                      - Kuwait
                      - Saudi Arabia
                    cities:
                      - Riyadh
                      - Jeddah
                      - Mecca
                      - Al Ahmadi
                      - Hawalli
                    isSampleDistribution: true
                    pricePerSample: 89
                    isInsertDistribution: true
                    pricePerInsert: 150
                    warehouseAddresses:
                      - adress1 test 5
                      - adress2 test 6
                    isMediaBuy: true
                    createdAt: 2020-08-13T04:44:15.317Z
                    updatedAt: 2020-08-13T04:44:15.317Z
                    mediaBuyTypes:
                      - name: Push Notifications
                        description: desc2
                        avgImpressions: 10
                        width: 1000
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                    completion: 100
                    companyName: Codemotion
                    companyWebsite: codemotion.eu
                    capability: High reach & volume
                    industry: Moms & Babies
                    genderFocus:
                      Female: 3.5
                    ageGroups:
                      sdfsd: 0
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                    additional:
                      logisticPrice: valueAdditionla1
                      stickerCost: valueAdditionla2
                  message: Your operation is ended successfully
  /partner/partner-profile/save:
    patch:
      tags:
        - Partner
      description: Save partner profile
      security:
        - Bearer: []
              
      requestBody:
        description: Partner profile
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
          multipart/form-data:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
        required: false
      responses:
        '200':
          description: Partner profile is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerProfileResponse'
              example:
                status: 200
                data:
                  content:
                    id: 4
                    userId: 4
                    companyDescription: MAYBE Codemotion
                    headquarterAddress: Upiter
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                    isAutomaticallyApprovedRequest: true
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                    monthlyVisitors: 15
                    monthlyCustomers: 13
                    amountOfOrders: 11
                    costOfOrder: 101
                    currency: USD
                    countries:
                      - Kuwait
                      - Saudi Arabia
                    cities:
                      - Riyadh
                      - Jeddah
                      - Mecca
                      - Al Ahmadi
                      - Hawalli
                    isSampleDistribution: true
                    pricePerSample: 89
                    isInsertDistribution: true
                    pricePerInsert: 150
                    warehouseAddresses:
                      - adress1 test 5
                      - adress2 test 6
                    isMediaBuy: true
                    createdAt: 2020-08-13T04:44:15.317Z
                    updatedAt: 2020-08-13T04:44:15.317Z
                    mediaBuyTypes:
                      - name: Push Notifications
                        description: desc2
                        avgImpressions: 10
                        width: 1000
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                    completion: 100
                    companyName: Codemotion
                    companyWebsite: codemotion.eu
                    capability: High reach & volume
                    industry: Moms & Babies
                    genderFocus:
                      Female: 3.5
                    ageGroups:
                      sdfsd: 0
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                    additional:
                      logisticPrice: valueAdditionla1
                      stickerCost: valueAdditionla2
                  message: Your operation is ended successfully
        '400':
          description: Empty body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: 'Input params is wrong. Please, contact with your support'
        '409':
          description: 'Partner can see only own profile, not other partner'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 409
                error:
                  message: >-
                    The partner can check only their profile! Please, sign in
                    with another partner
      x-codegen-request-body-name: Partner profile
  /client/change-password:
    patch:
      tags:
        - Client
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /client/profile:
    get:
      tags:
        - Client
      description: Get client profile
      responses:
        '200':
          description: Client profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileResponse'
  /admin/common/change-password:
    patch:
      tags:
        - Admin
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        '200':
          description: Change user password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
      x-codegen-request-body-name: body
  /admin/client/get-settings:
    get:
      tags:
        - Admin
      description: Get all settings on client side for admin
      security:
        - Bearer: []
              
      responses:
        '200':
          description: All settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    ageGroups:
                      - 18-24 Early Youth
                      - 25-35 Young
                      - 36-45 Middle
                      - 46-55 Senior
                      - 55+ Elderly
                    segments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
  /admin/partner/get-settings:
    get:
      tags:
        - Partner Properties
      description: >-
        All constants that frontend to show for admin to upsert partner
        properties
      security:
        - Bearer: []
              
      responses:
        '200':
          description: All is ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    capabilities:
                      - High reach & volume
                      - Social Media Control
                      - Control Over Drivers
                      - In-App announcements
                      - Per-Request-Sampling
                      - Active users/Tech Savvy
                      - Users who like to explore (Explorers)
                      - Users with high response rate
                      - Users with high engagement
                    industries:
                      - Food Deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion & Beauty
                      - Clothing & Wearable
                      - Athletes & Willness
                      - Electronics & Tech
                      - Door to door delivery
                      - Ride hailing
                      - Pharmaceutical
                    segments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    genderFocus:
                      - Male
                      - Female
                    ageGroups:
                      - 18-24 Early Youth
                      - 25-35 Young
                      - 36-45 Middle
                      - 46-55 Senior
                      - 55+ Elderly
  /admin/age-groups/view/{id}:
    get:
      tags:
        - Admin-Age-Group
      description: Get age group details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with age group, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupResponse'
  /admin/age-groups/media:
    post:
      tags:
        - Admin-Age-Group
      description: Upload age group images
      security:
        - Bearer: []
              
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - files
                - id
              properties:
                id:
                  type: string
                  description: id of age of group
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
  '/admin/age-groups/media/{id}':
    get:
      tags:
        - Partner
      description: Get age group media according to params id on database and s3
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: >-
            Simple response with "Age group profile is deleted successfully."
            message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Age group media is deleted successfully.
  '/admin/age-groups/list':
    get:
      tags:
        - Admin-Age-Group
      description: Get list of age groups with details
      security:
        - Bearer: []
      responses:
        '200':
          description: 'Response with age group, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgeGroupResponse'
  /admin/age-groups/create:
    put:
      tags:
        - Admin-Age-Group
      description: >-
        Used to create age group and will get new age group id by admin. Can be
        used with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Age group object. Please check age group definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupCreateRequest'
        required: false
      responses:
        '200':
          description: Response with age group id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupResponse'
      x-codegen-request-body-name: ageGroup
  /admin/age-groups/edit:
    put:
      tags:
        - Admin-Age-Group
      description: >-
        Used to edit all age group fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Age group object. Please check age group definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
        required: false
      responses:
        '200':
          description: Response with age group id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeGroupResponse'
      x-codegen-request-body-name: ageGroup
  '/admin/age-groups/delete/{id}':
    delete:
      tags:
        - Admin-Age-Group
      description: Delete age group according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Age group is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Age group is deleted successfully.
  /admin/segments/view/{id}:
    get:
      tags:
        - Admin-Segment
      description: Get segment details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with segment, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
  '/admin/segments/list':
    get:
      tags:
        - Admin-Segment
      description: Get list of segments with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: 'Response with segment, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SegmentResponse'
  /admin/segments/create:
    put:
      tags:
        - Admin-Segment
      description: >-
        Used to create segment and will get new segment id by admin. Can be used
        with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Segment object. Please check segment definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SegmentCreateRequest'
        required: false
      responses:
        '200':
          description: Response with segment id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
      x-codegen-request-body-name: segment
  /admin/segments/edit:
    put:
      tags:
        - Admin-Segment
      description: >-
        Used to edit all segment fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Segment object. Please check segment definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
        required: false
      responses:
        '200':
          description: Response with segment id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
      x-codegen-request-body-name: segment
  '/admin/segments/delete/{id}':
    delete:
      tags:
        - Admin-Segment
      description: Delete segment according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Segment is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Segment is deleted successfully.

  '/admin/roles/view/{id}':
    get:
      tags:
        - Admin-Role
      description: Get role details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with role, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
  '/admin/roles/list':
    get:
      tags:
        - Admin-Role
      description: Get list of roles with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: 'Response with role, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleResponse'
  /admin/roles/create:
    put:
      tags:
        - Admin-Role
      description: >-
        Used to create role and will get new role id by admin. Can be used
        with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Role object. Please check role definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
        required: false
      responses:
        '200':
          description: Response with role id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
      x-codegen-request-body-name: role
  /admin/roles/edit:
    put:
      tags:
        - Admin-Role
      description: >-
        Used to edit all role fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Role object. Please check role definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgeGroupEditRequest'
        required: false
      responses:
        '200':
          description: Response with role id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
      x-codegen-request-body-name: role

  '/partner/request/open':
    get:
      tags:
        - Partner-Request
      description: Get list of open requests with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: 'Response with open requests, if available. Empty object in another way'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionResponse'
  '/brief/view/{id}':
    get:
      tags:
        - Brief
      description: Get brief details according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with brief, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    status: PENDING_APPROVAL
                    name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                    quantity: 0
                    briefStartDate: 2020-07-27T23:18:56.831Z
                    instructions: >-
                      73iwPjYo  PxZo Hr Wdfe  sj1c Um  2hvL  Gg9JlKfSa KV54bE 
                      KcN vF EcWG0Pao a  C 4dWW5x yBW hg   t bKP7
                    mediaStartDate: 2020-07-27T23:18:56.831Z
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages: []
                  message: Your operation is ended successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id must be a number
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  '/brief/delete/{id}':
    delete:
      tags:
        - Brief
      description: Delete brief according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Brief is deleted successfully.
        '400':
          description: Wrong status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    Brief can be only in rejected and pending status for
                    deleting
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /brief/remove-media:
    delete:
      tags:
        - Brief
      description: Delete brief media according to params id on database and s3
      security:
        - Bearer: []
              
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Brief media is deleted successfully.
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
      x-codegen-request-body-name: input
  /brief/brief-settings:
    get:
      tags:
        - Brief
      description: All data libraries we need till brief creation
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    distributionItems:
                      - Sample
                      - Insert
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    briefDurations:
                      - 2 Weeks
                      - 3 Weeks
                      - 1 Month
                      - 5 Weeks
                      - 6 Weeks
                      - 7 Weeks
                      - 2 Months Or More
                    mediaDurations:
                      - TBD
                    targetSegments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    targetCamapaigns:
                      - Wide Reach
                      - Niche Audience
                      - Brand Awareness
                      - Acquire New Customer
                      - Test New Product
                      - Feedback for a Product
                      - >-
                        Conversation to X (Customers who are more likely to take
                        action)
                      - Campaign with time limitation
                      - Campaign with long-duration-request rate
                      - Campaign with Brand Activation
                    ageGroups:
                      - Infants 5 years
                      - Children 6 years - 12 years
                      - Teens 13 years - 19 years
                      - Young 20 years - 35 years
                      - Middle 36 years - 55 years
                      - Elderly over 56 years
  /admin/brief/create:
    post:
      tags:
        - Admin-Brief
      description: >-
        Used to create brief and will get new brief id by admin. Can be used
        with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefCreateByAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefCreateByAdminRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefFirstCreation'
              example:
                status: 200
                data:
                  content:
                    briefId: 3
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: briefTypes must be an array
      x-codegen-request-body-name: brief
  '/admin/brief/view/{id}':
    get:
      tags:
        - Admin-Brief
      description: Get brief details according to params id by admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Response with brief, if available. Empty object in another way'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    status: PENDING_APPROVAL
                    name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                    quantity: 0
                    briefStartDate: 2020-07-27T23:18:56.831Z
                    instructions: >-
                      73iwPjYo  PxZo Hr Wdfe  sj1c Um  2hvL  Gg9JlKfSa KV54bE 
                      KcN vF EcWG0Pao a  C 4dWW5x yBW hg   t bKP7
                    mediaStartDate: 2020-07-27T23:18:56.831Z
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages: []
                  message: Your operation is ended successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id must be a number
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /admin/brief/edit:
    put:
      tags:
        - Admin-Brief
      description: >-
        Used to edit all brief fields values by admin. This endpoint will update
        only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633181-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633187-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633190-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793423-Screenshot_from_2020-07-19_23-51-43.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793425-Screenshot_from_2020-07-20_00-06-18.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793427-Screenshot_from_2020-07-20_00-12-46.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793429-Screenshot_from_2020-07-23_09-19-55.png
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  '/admin/brief/edit-step/{step}':
    put:
      tags:
        - Admin-Brief
      description: >-
        Used to save client updates on every step. Now there is on checking on
        every step, so there is simple brief update by admin
      security:
        - Bearer: []
      parameters:   
        - name: step
          in: path
          required: true
          schema:
            type: string
            enum:
              - BRIEF_TYPE
              - BRIEF_PRODUCT
              - BRIEF_TARGETING
              - BRIEF_SERVICES
              - BRIEF_MEDIA_BUY
              - BRIEF_PARTNER
              - BRIEF_UPLOAD
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  '/admin/brief/delete/{id}':
    delete:
      tags:
        - Admin-Brief
      description: Delete brief according to params id by admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Brief is deleted successfully.
        '400':
          description: Wrong status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    Brief can be only in rejected and pending status for
                    deleting
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /admin/brief/list:
    get:
      tags:
        - Admin-Brief
      description: >-
        Used to get all available briefs. You can get only briefs only created
        by you. Example -
        /brief/list?status[]=draft&status[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:      
        - name: userId
          in: query
          schema:
            type: integer
        - name: isApproved
          in: query
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefList'
              example:
                status: 200
                data:
                  content:
                    briefs:
                      - id: 20
                        name: ' lnFXevK oP dxQvx jmy6wQo7Bo VbL   OC E '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:17:23.529Z
                        mediaStartDate: 2020-07-27T23:17:23.529Z
                        status: PARTIALLY_REJECTED
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028983-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028988-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028990-Screenshot_from_2020-06-06_23-29-51.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128221-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128227-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128229-Screenshot_from_2020-06-06_23-29-51.png
                      - id: 23
                        name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:18:56.831Z
                        mediaStartDate: 2020-07-27T23:18:56.831Z
                        status: PENDING_APPROVAL
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    total: 2
  '/admin/brief/download-media/{id}':
    get:
      tags:
        - Admin-Brief
      description: Download media according to params id by admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id must be a number
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
  /admin/brief/brief-settings:
    get:
      tags:
        - Admin-Brief
      description: All data libraries we need till brief creation by admin
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    distributionItems:
                      - Sample
                      - Insert
                    productTypes:
                      - Baby Care
                      - Beverages
                      - Body Wash
                      - Cooking Ingredients & Food
                      - Fabric Care
                      - Fem Care
                      - Hair Care
                      - Oral Care
                      - Pet Food & Care
                      - Services
                      - Skin Care
                      - Snack Food
                      - Vitamins & Drugs
                      - Other
                    briefDurations:
                      - 2 Weeks
                      - 3 Weeks
                      - 1 Month
                      - 5 Weeks
                      - 6 Weeks
                      - 7 Weeks
                      - 2 Months Or More
                    mediaDurations:
                      - TBD
                    targetSegments:
                      - Students
                      - Mothers & Infants
                      - Athletic / Fitness Focused
                      - Health / Wellness Focused
                      - Class A and B Families
                      - Fashion & Beauty Focused
                      - Mails Professionals
                      - Old Professionals
                      - Young Lads
                      - Middle Lads
                    targetCamapaigns:
                      - Wide Reach
                      - Niche Audience
                      - Brand Awareness
                      - Acquire New Customer
                      - Test New Product
                      - Feedback for a Product
                      - >-
                        Conversation to X (Customers who are more likely to take
                        action)
                      - Campaign with time limitation
                      - Campaign with long-duration-request rate
                      - Campaign with Brand Activation
                    ageGroups:
                      - Infants 5 years
                      - Children 6 years - 12 years
                      - Teens 13 years - 19 years
                      - Young 20 years - 35 years
                      - Middle 36 years - 55 years
                      - Elderly over 56 years
  '/admin/brief/partner/fetch/{id}':
    get:
      tags:
        - Admin-Brief
      description: >-
        Get all partners with Best Match algorithm regarding to this brief by
        admin
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Brief id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerList'
              example:
                status: 200
                data:
                  content:
                    - id: 4
                      userId: 2
                      companyDescription: Codemotion
                      headquarterAddress: Earth
                      socialMediaLinks:
                        - fb.com/example
                        - twitter.com/example
                      isAutomaticallyApprovedRequest: true
                      productCategories:
                        - Moms & Babies
                        - Electronics & Tech
                      monthlyVisitors: 8
                      monthlyCustomers: 11
                      amountOfOrders: 15
                      costOfOrder: 123
                      currency: AED
                      countries:
                        - Kuwait
                        - Saudi Arabia
                      cities:
                        - Riyadh
                        - Jeddah
                        - Mecca
                        - Al Ahmadi
                        - Hawalli
                      isSampleDistribution: true
                      pricePerSample: 324
                      isInsertDistribution: true
                      pricePerInsert: 120
                      warehouseAddresses:
                        - adress1 test 1
                        - adress2 test 2
                      isMediaBuy: true
                      mediaBuyTypes:
                        - Home Page Banners
                        - Cashback Offers
                      createdAt: 2020-08-13T04:44:15.317Z
                      updatedAt: 2020-08-13T04:44:15.317Z
                      props:
                        id: 6
                        capability: Control Over Drivers
                        industry: Fashion & Beauty
                        genderFocus:
                          Female: 3
                        ageGroups:
                          18-24 Early Youth: 2
                          25-35 Young: 4
                        segments:
                          Moms: 3
                          Fashion Focused: 4
                        additional:
                          logisticPrice: valueAdditionla1
                          stickerCost: valueAdditionla2
                        createdAt: 2020-08-13T04:44:15.324Z
                        updatedAt: 2020-08-13T04:44:15.324Z
                        partnerId: 4
                      user:
                        companyName: Codemotion
                        companyWebsite: codemotion.eu
                        status: ACTIVE
                        isBanned: false
                  message: Your operation is ended successfully
  /admin/brief/recommended-partners:
    get:
      tags:
        - Admin-Brief
      description: >-
        Used to filter to recommended partner list by admin. Example -
        /brief/filter-partner?briefId=25&categories[]=Food
        deliveries&categories[]=Moms %26 Babies
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: query
          description: Simple brief id on which we will find recommended partners
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Response with recommended partner list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedPartnerList'
              example:
                status: 200
                data:
                  content:
                    total: 1
                    partners:
                      - id: 4
                        userId: 2
                        companyWebsite: codemotion.eu
                        companyDescription: Listing short description
                        name: Codemotion
                        mainImageUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        logoUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        companyLabel: ECOMMERCE
                        match: 85
                        isSampleDistribution: true
                        pricePerSample: 324
                        isInsertDistribution: true
                        pricePerInsert: 120
                        currency: AED
                        links:
                          - fb.com/example
                          - twitter.com/example
                        social:
                          - name: Leads
                            counter: 800
                            url: fb.com/example3
                          - name: Looks
                            counter: 144000
                            url: instagram.com/exmaple3
                          - name: Fb
                            counter: 1500
                            url: fb.com/example3
                          - name: Instagram
                            counter: 1500
                            url: instagram.com/exmaple3
                          - name: Twitter
                            counter: 1500
                            url: twitter.com/example3
  /admin/brief/upload:
    post:
      tags:
        - Admin-Brief
      description: >-
        Upload brief` product, service and upload materilas (6th step) images by
        admin. No need to send result image array one more time to server, for
        example, save and send image array inside the /brief/create request.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
        '400':
          description: >-
            Validation error. All params is required. Wrong entity value is
            described in example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    entity must be one of [briefs_product_images,
                    briefs_service_images]
  /admin/brief/remove-media:
    delete:
      tags:
        - Admin-Brief
      description: Delete brief media according to params id on database and s3 by admin
      security:
        - Bearer: []
              
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
          multipart/form-data:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                entity:
                  type: string
                urls:
                  type: array
                  items:
                    type: string
              example:
                application/json:
                  briefId: '3331'
                  entity: briefs_service_images
                  urls:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271967-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/3331/1596644271972-Screenshot_from_2020-06-05_12-08-58.png
        required: true
      responses:
        '201':
          description: Simple response with "Brief is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 201
                data:
                  message: Brief media is deleted successfully.
        '404':
          description: No brief with this id or brief has another owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message: >-
                    Brief has another owner. Can't fetch this brief with this
                    credentials.
      x-codegen-request-body-name: input
  /admiin/brief/filter-settings:
    get:
      tags:
        - Admin-Brief
      description: Get all settings for filters on Partners step by admin
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    categories:
                      - Food deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion and Beauty
                      - Clothing & Wearable
                      - Athletes & Wiliness
                      - Electronics & Tech
                      - Door-To-Door Delivery
                      - Ride-Hailing
                      - Pharmaceutical
                    pricePerUnit:
                      - under $0.50
                      - $0.50 to $1.00
                      - $1.01 to $1.50
                      - $1.51 to $2.00
                      - $2.01 to $3.00
                      - Over $3.00
                    matches:
                      - 100% Match
                      - Above 90%
                      - Above 80%
                      - Above 70%
                      - Above 60%
                      - Above 50%
                      - Any
                    types:
                      - Brand Store (Brand bundle)
                      - Store Positioning
                      - Home Page Banners
                      - In App Banners
                      - SKU Uplifting
                      - Popup Window
                      - Push Notification
                      - Free Delivery
                      - Cashback Offers
                      - Paid SM Campaigns
                      - Price Off Promotion
                      - Online survey or campaign
                      - Branded Printing
                      - OOH - Media Partnership
                      - Email Blast
                    sortBy:
                      - desc
                      - asc
  '/admin/brief/media-buy-service/{briefId}':
    get:
      tags:
        - Admin-Brief
      description: >-
        Used for getting all info from cart and getting Media Buy Type info by
        admin. If you want to get more info, so, please, put it in cart
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: path
          description: Brief id for which we created this cart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart items with media types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    data:
                      - partnerId: 4
                        key: value
                        mediaTypes:
                          - id: 6
                            name: Home Page Banners
                            description: desc2
                            avgImpressions: 10
                            partnerId: 4
                            createdAt: 2020-08-18T10:32:24.198Z
                            updatedAt: 2020-08-18T10:32:24.198Z
                          - id: 7
                            name: Push Notifications
                            description: desc2
                            avgImpressions: 10
                            width: 1000
                            partnerId: 4
                            createdAt: 2020-08-18T10:58:18.542Z
                            updatedAt: 2020-08-18T10:58:18.542Z
                  message: Your operation is ended successfully
  /admin/brief/bill/edit:
    put:
      tags:
        - Admin-Bill
      description: >-
        Used to edit all bill fields values.
      security:
        - Bearer: []
              
      requestBody:
        description: Bill object. Please check Bill definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillEditRequest'
        required: false
  /admin/brief/bill/list:
    get:
      tags:
        - Admin-Bill
      description: >-
        Used to get all available bills. Example -
        /brief/bill/list?status[]=draft&paymentStatus[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
        - name: isApproved
          in: query
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: 'paymentStatus[]'
          in: query
          description: >-
            Array of payment statuses to filter bill list. Can be used like -
            "paymentStatus[]=REJECTED&paymentStatus[]=PENDING"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillListItem'
  '/notifications/list':
    get:
      tags:
        - Notification
      description: Get list of notifications with details
      security:
        - Bearer: []
              
      responses:
        '200':
          description: >-
            Response with notification, if available. Empty object in another
            way
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponse'
  /notifications/create:
    put:
      tags:
        - Notification
      description: >-
        Used to create notification and will get new notification id by admin.
        Can be used with all available fields
      security:
        - Bearer: []
              
      requestBody:
        description: >-
          Notification object. Please check notification definition or swagger
          file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
        required: false
      responses:
        '200':
          description: Response with Notification id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
      x-codegen-request-body-name: notification
  /notifications/edit:
    put:
      tags:
        - Notification
      description: >-
        Used to edit all notification fields values by admin. This endpoint will
        update only in case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: >-
          Notification object. Please check notification definition or swagger
          file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationEditRequest'
        required: false
      responses:
        '200':
          description: Response with notification id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
      x-codegen-request-body-name: notification
  '/notifications/delete/{id}':
    delete:
      tags:
        - Notification
      description: Delete notification according to params id
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Simple response with "Notification is deleted successfully." message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  message: Notification is deleted successfully.
  /brief/create:
    post:
      tags:
        - Brief
      description: >-
        Used to create brief and will get new brief id. Can be used with all
        available fields
      security:
        - Bearer: []
              
      requestBody:
        description: >-
          Brief object. Please check Brief definition or swagger file. All
          description goes from confluence,
          https://codemotion.atlassian.net/wiki/spaces/QUAN/pages/1748730324/Brief
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefCreateRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefFirstCreation'
              example:
                status: 200
                data:
                  content:
                    briefId: 3
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: briefTypes must be an array
      x-codegen-request-body-name: brief
  /brief/list:
    get:
      tags:
        - Brief
      description: >-
        Used to get all available briefs. You can get only briefs only created
        by you. Example -
        /brief/list?status[]=draft&status[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefList'
              example:
                status: 200
                data:
                  content:
                    briefs:
                      - id: 20
                        name: ' lnFXevK oP dxQvx jmy6wQo7Bo VbL   OC E '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:17:23.529Z
                        mediaStartDate: 2020-07-27T23:17:23.529Z
                        status: PARTIALLY_REJECTED
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028983-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028988-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972028990-Screenshot_from_2020-06-06_23-29-51.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128221-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128227-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/20/1595972128229-Screenshot_from_2020-06-06_23-29-51.png
                      - id: 23
                        name: 'cF mh V1  bZkm GjCl1Psk FKg8 eVYnZ rz U '
                        quantity: 0
                        briefStartDate: 2020-07-27T23:18:56.831Z
                        mediaStartDate: 2020-07-27T23:18:56.831Z
                        status: PENDING_APPROVAL
                        productImages:
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835880-Screenshot_from_2020-05-31_12-32-20.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835888-Screenshot_from_2020-06-05_12-08-58.png
                          - >-
                            https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596001835890-Screenshot_from_2020-06-06_23-29-51.png
                    total: 2
  /brief/edit:
    put:
      tags:
        - Brief
      description: >-
        Used to edit all brief fields values. This endpoint will update only in
        case you have some changes
      security:
        - Bearer: []
              
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    productImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633181-Screenshot_from_2020-05-31_12-32-20.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633187-Screenshot_from_2020-06-05_12-08-58.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/23/1596129633190-Screenshot_from_2020-06-06_23-29-51.png
                    serviceImages:
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793423-Screenshot_from_2020-07-19_23-51-43.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793425-Screenshot_from_2020-07-20_00-06-18.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793427-Screenshot_from_2020-07-20_00-12-46.png
                      - >-
                        https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/23/1596129793429-Screenshot_from_2020-07-23_09-19-55.png
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  /brief/test-timezone:
    post:
      tags:
        - Brief
      description: Test endpoint for understanding how to work with time and timezones
      security:
        - Bearer: []
              
      requestBody:
        description: All settings to play with time
        content:
          application/json:
            schema:
              type: object
              properties:
                isUnix:
                  type: boolean
                  description: >-
                    You must check additionally if you type in unix time. False
                    by default
                timezone:
                  type: number
                date:
                  type: string
          multipart/form-data:
            schema:
              type: object
              properties:
                isUnix:
                  type: boolean
                  description: >-
                    You must check additionally if you type in unix time. False
                    by default
                timezone:
                  type: number
                date:
                  type: string
        required: false
      responses:
        '200':
          description: The response with all results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    formatInput: '1596015482, 1596014913857, 2020-07-29T07:58:29.616Z'
                    formatOutput: 'Jul 29, 2020'
                    utc: 2020-07-29T09:28:33.000Z
                    local: 2020-07-29T09:28:33.000Z
      x-codegen-request-body-name: time-settings
  /brief/upload:
    post:
      tags:
        - Brief
      description: >-
        Upload brief` product, service and upload materilas (6th step) images.
        No need to send result image array one more time to server, for example,
        save and send image array inside the /brief/create request.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
          multipart/form-data:
            schema:
              required:
                - entity
                - entityId
                - files
              properties:
                entity:
                  type: string
                  description: Check S3BucketNames in constants
                  enum:
                    - briefs_product_images
                    - briefs_service_images
                    - briefs_upload_materials_images
                entityId:
                  type: string
                  description: Here must be Brief id field. No validation is set here.
                files:
                  type: string
                  description: The files to upload. JPG|JPEG|PNG| formats only
                  format: binary
        required: true
      responses:
        '201':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefUploadResponse'
              example:
                status: 201
                data:
                  content:
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649040-Screenshot_from_2020-05-31_12-32-20.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649044-Screenshot_from_2020-06-05_12-08-58.png
                    - >-
                      https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_product_images/1/1595965649047-Screenshot_from_2020-06-06_23-29-51.png
        '400':
          description: >-
            Validation error. All params is required. Wrong entity value is
            described in example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: >-
                    entity must be one of [briefs_product_images,
                    briefs_service_images]
  '/brief/edit-step/{step}':
    put:
      tags:
        - Brief
      description: >-
        Used to save client updates on every step. Now there is on checking on
        every step, so there is simepl brief update
      security:
        - Bearer: []
      parameters:
        - name: step
          in: path
          required: true
          schema:
            type: string
            enum:
              - BRIEF_TYPE
              - BRIEF_PRODUCT
              - BRIEF_TARGETING
              - BRIEF_SERVICES
              - BRIEF_MEDIA_BUY
              - BRIEF_PARTNER
              - BRIEF_UPLOAD
      requestBody:
        description: Brief object. Please check Brief definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BriefEditStepRequest'
        required: false
      responses:
        '200':
          description: Response with brief id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefDetailsSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    isRemoved: false
                    createdAt: 2020-07-30T09:46:18.323Z
                    updatedAt: 2020-07-30T09:46:24.920Z
                    status: DRAFT
                    name: null-4
                    editor:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                    owner:
                      email: client@app.com
                      firstName: Client
                      lastName: Codemotion
                      phone: 79999999999
                      companyName: Codemotion
                      companyWebsite: codemotion.eu
                      role: CLIENT
                      status: ACTIVE
                      isBanned: false
                  message: Brief is updated successfully.
        '400':
          description: >-
            Please, include brief id in request body. Check create request in
            other cases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 400
                error:
                  message: id is required
        '404':
          description: >-
            No such id in database or brief has another owner. Please, recheck
            is you send in brief
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 404
                error:
                  message:
                    - NotFoundError
                    - >-
                      Brief has another owner. Cant fetch this brief with this
                      credentials.
        '422':
          description: >-
            No changes between saved object and brief in request body. Can be
            handled as success case, your data is on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 422
                error:
                  message: "Can't update brief, no changes"
        '500':
          description: Serrver error. Something is broken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 500
                error:
                  message: MSG_INTERNAL_SERVER_ERROR
      x-codegen-request-body-name: brief
  /brief/filter-settings:
    get:
      tags:
        - Brief
      description: Get all settings for filters on Partners step
      security:
        - Bearer: []
              
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
              example:
                status: 200
                data:
                  content:
                    categories:
                      - Food deliveries
                      - Moms & Babies
                      - Online Grocery
                      - Fashion and Beauty
                      - Clothing & Wearable
                      - Athletes & Wiliness
                      - Electronics & Tech
                      - Door-To-Door Delivery
                      - Ride-Hailing
                      - Pharmaceutical
                    pricePerUnit:
                      - under $0.50
                      - $0.50 to $1.00
                      - $1.01 to $1.50
                      - $1.51 to $2.00
                      - $2.01 to $3.00
                      - Over $3.00
                    matches:
                      - 100% Match
                      - Above 90%
                      - Above 80%
                      - Above 70%
                      - Above 60%
                      - Above 50%
                      - Any
                    types:
                      - Brand Store (Brand bundle)
                      - Store Positioning
                      - Home Page Banners
                      - In App Banners
                      - SKU Uplifting
                      - Popup Window
                      - Push Notification
                      - Free Delivery
                      - Cashback Offers
                      - Paid SM Campaigns
                      - Price Off Promotion
                      - Online survey or campaign
                      - Branded Printing
                      - OOH - Media Partnership
                      - Email Blast
                    sortBy:
                      - desc
                      - asc
  '/brief/partner/fetch/{id}':
    get:
      tags:
        - Brief
      description: Get all partners with Best Match algorithm regarding to this brief
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Brief id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of partners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerList'
              example:
                status: 200
                data:
                  content:
                    - id: 4
                      userId: 2
                      companyDescription: Codemotion
                      headquarterAddress: Earth
                      socialMediaLinks:
                        - fb.com/example
                        - twitter.com/example
                      isAutomaticallyApprovedRequest: true
                      productCategories:
                        - Moms & Babies
                        - Electronics & Tech
                      monthlyVisitors: 8
                      monthlyCustomers: 11
                      amountOfOrders: 15
                      costOfOrder: 123
                      currency: AED
                      countries:
                        - Kuwait
                        - Saudi Arabia
                      cities:
                        - Riyadh
                        - Jeddah
                        - Mecca
                        - Al Ahmadi
                        - Hawalli
                      isSampleDistribution: true
                      pricePerSample: 324
                      isInsertDistribution: true
                      pricePerInsert: 120
                      warehouseAddresses:
                        - adress1 test 1
                        - adress2 test 2
                      isMediaBuy: true
                      mediaBuyTypes:
                        - Home Page Banners
                        - Cashback Offers
                      createdAt: 2020-08-13T04:44:15.317Z
                      updatedAt: 2020-08-13T04:44:15.317Z
                      props:
                        id: 6
                        capability: Control Over Drivers
                        industry: Fashion & Beauty
                        genderFocus:
                          Female: 3
                        ageGroups:
                          18-24 Early Youth: 2
                          25-35 Young: 4
                        segments:
                          Moms: 3
                          Fashion Focused: 4
                        additional:
                          logisticPrice: valueAdditionla1
                          stickerCost: valueAdditionla2
                        createdAt: 2020-08-13T04:44:15.324Z
                        updatedAt: 2020-08-13T04:44:15.324Z
                        partnerId: 4
                      user:
                        companyName: Codemotion
                        companyWebsite: codemotion.eu
                        status: ACTIVE
                        isBanned: false
                  message: Your operation is ended successfully
  /brief/recommended-partners:
    get:
      tags:
        - Brief
      description: >-
        Used to filter to recommended partner list. Example -
        /brief/filter-partner?briefId=25&categories[]=Food
        deliveries&categories[]=Moms %26 Babies
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: query
          description: Simple brief id on which we will find recommended partners
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Response with recommended partner list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedPartnerList'
              example:
                status: 200
                data:
                  content:
                    total: 1
                    partners:
                      - id: 4
                        userId: 2
                        companyWebsite: codemotion.eu
                        companyDescription: Listing short description
                        name: Codemotion
                        mainImageUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        logoUrl: >-
                          https://codemotion.ninja/wp-content/uploads/2016/09/logows-1.png
                        companyLabel: ECOMMERCE
                        match: 85
                        isSampleDistribution: true
                        pricePerSample: 324
                        isInsertDistribution: true
                        pricePerInsert: 120
                        currency: AED
                        links:
                          - fb.com/example
                          - twitter.com/example
                        social:
                          - name: Leads
                            counter: 800
                            url: fb.com/example3
                          - name: Looks
                            counter: 144000
                            url: instagram.com/exmaple3
                          - name: Fb
                            counter: 1500
                            url: fb.com/example3
                          - name: Instagram
                            counter: 1500
                            url: instagram.com/exmaple3
                          - name: Twitter
                            counter: 1500
                            url: twitter.com/example3
  '/cart/view-briefId/{id}':
    get:
      tags:
        - Cart
      description: >-
        Please, put all data inside the additional field. After you will get
        full understanding about data structures you will use, we will refactor
        this part
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Brief id for which we created this cart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    additional:
                      items:
                        - partnerId: 4
                          key: value
                    briefId: 28
                  message: Your operation is ended successfully
  /cart/upsert:
    post:
      tags:
        - Cart
      description: >-
        Used for creating/updating carts. Can throw standart erros regarding to
        bad input
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                additional:
                  type: object
                  properties: {}
                  description: Put all you want
                  example:
                    additional:
                      briefId: 28
                      additional:
                        items:
                          - partnerId: 4
                            key: value
          multipart/form-data:
            schema:
              type: object
              properties:
                briefId:
                  type: number
                additional:
                  type: object
                  properties: {}
                  description: Put all you want
                  example:
                    additional:
                      briefId: 28
                      additional:
                        items:
                          - partnerId: 4
                            key: value
        required: false
      responses:
        '200':
          description: Upload response with image links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    cart:
                      additional:
                        items:
                          - partnerId: 4
                            key: value
                      briefId: 28
                  message: Cart is updated successfully.
      x-codegen-request-body-name: input
  '/brief/media-buy-service/{briefId}':
    get:
      tags:
        - Brief
      description: >-
        Used for getting all info from cart and getting Media Buy Type info. If
        you want to get more info, so, please, put it in cart
      security:
        - Bearer: []
      parameters:
        - name: briefId
          in: path
          description: Brief id for which we created this cart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart items with media types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              example:
                status: 200
                data:
                  content:
                    data:
                      - partnerId: 4
                        key: value
                        mediaTypes:
                          - id: 6
                            name: Home Page Banners
                            description: desc2
                            avgImpressions: 10
                            partnerId: 4
                            createdAt: 2020-08-18T10:32:24.198Z
                            updatedAt: 2020-08-18T10:32:24.198Z
                          - id: 7
                            name: Push Notifications
                            description: desc2
                            avgImpressions: 10
                            width: 1000
                            partnerId: 4
                            createdAt: 2020-08-18T10:58:18.542Z
                            updatedAt: 2020-08-18T10:58:18.542Z
                  message: Your operation is ended successfully
  /brief/bill/list:
    get:
      tags:
        - Bill
      description: >-
        Used to get all available bills. Example -
        /brief/bill/list?status[]=draft&paymentStatus[]=PenDinG&status[]=Approved&search=A&sortField=id&direction=asc&offset=3&limit=2
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
        - name: isApproved
          in: query
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            The number of items to skip before starting to collect the result
            set. Used with limit.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            The number of items to get after starting to collect the result set
            (pagination step). Used with offset.
          schema:
            type: integer
            default: 10
        - name: 'status[]'
          in: query
          description: >-
            Array of statuses to filter brief list. Can be used like -
            "status[]=draft&status[]=PenDinG"
          schema:
            type: string
        - name: 'paymentStatus[]'
          in: query
          description: >-
            Array of payment statuses to filter bill list. Can be used like -
            "paymentStatus[]=REJECTED&paymentStatus[]=PENDING"
          schema:
            type: string
        - name: search
          in: query
          description: >-
            String value which will be found in all text fields (now it's name
            and instructions)
          schema:
            type: string
        - name: sortField
          in: query
          description: >-
            Available field in Brief entity. You can check available fields in
            definitions. Used with 'direction'
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for filtering. Used with 'sortField'.
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Response with brief array
          content:
            application/json:
              schema:
                type: array
                bills:
                  $ref: '#/components/schemas/BillListItem'
  /brief/bill/edit:
    put:
      tags:
        - Bill
      description: >-
        Used to edit all bill fields values.
      security:
        - Bearer: []
              
      requestBody:
        description: Bill object. Please check Bill definition or swagger file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillEditRequest'
        required: false
  '/notifications/view/{id}':
    get:
      tags:
        - Notification
      description: Get notification details according to params id
      security:
        - Bearer: []
      parameters:  
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Response with notification, if available. Empty object in another
            way
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
  /admin/partner/upsert-properties-partner-id:
    post:
      tags:
        - Partner Properties
      description: >-
        Insert or update partner properties info by partner id. One-to-one
        relation with Partner object. Only for admins
      security:
        - Bearer: []
              
      responses:
        '200':
          description: >-
            Response with brief id and result props (you need it in updating
            cases)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPropsUpsertResponse'
              example:
                status: 200
                data:
                  content:
                    propertiesId: 1
                    result:
                      id: 1
                      capability: test-capability3
                      industry: test-industry
                      genderFocus:
                        key: valueGender
                      ageGroups:
                        key: valueAge
                      segments:
                        key: valueSegments
                      additional:
                        logisticPrice: valueAdditionla1
                        stickerCost: valueAdditionla2
                      partnerId: 512
                      updatedAt: 2020-08-03T06:30:37.665Z
                      createdAt: 2020-08-03T05:29:58.388Z
        '409':
          description: You can't create one more props for this Partner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 409
                error:
                  message: >-
                    This partner have created properties object already. Please,
                    use that object!
  '/admin/partner/properties/{id}':
    get:
      tags:
        - Partner Properties
      description: Get partner properties info by partner id. Only for admins
      security:
        - Bearer: []
      parameters:     
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Authorized partner object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPropsDetail'
              example:
                status: 200
                data:
                  content:
                    id: 1
                    capability: test-capability3
                    industry: test-industry
                    genderFocus:
                      key: valueGender
                    ageGroups:
                      key: valueAge
                    segments:
                      key: valueSegments
                    additional:
                      logisticPrice: valueAdditionla1
                      stickerCost: valueAdditionla2
                    createdAt: 2020-08-03T05:29:58.388Z
                    updatedAt: 2020-08-03T06:30:37.665Z
                    partnerId: 512
  /client/profile/save:
    patch:
      tags:
        - Client
      description: Save client profile
      security:
        - Bearer: []
              
      requestBody:
        description: Partner profile
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
          multipart/form-data:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                companyWebsite:
                  type: string
                companyDescription:
                  type: string
                headquarterAddress:
                  type: string
                socialMediaLinks:
                  type: array
                  example:
                    socialMediaLinks:
                      Fb: fb.com/example3
                      Twitter: twitter.com/example3
                      Instagram: instagram.com/exmaple3
                  items:
                    type: string
                isAutomaticallyApprovedRequest:
                  type: boolean
                productCategories:
                  type: array
                  description: Product categories
                  example:
                    productCategories:
                      - Ride-Hailing
                      - Athletes & Wiliness
                  items:
                    type: string
                monthlyVisitors:
                  type: number
                monthlyCustomers:
                  type: number
                amountOfOrders:
                  type: number
                costOfOrder:
                  type: number
                currency:
                  type: array
                  items:
                    type: string
                genderFocus:
                  type: array
                  example:
                    genderFocus:
                      Female: 3.5
                  items:
                    type: string
                ageGroups:
                  type: array
                  example:
                    ageGroups:
                      18-24 Early Youth: 0
                  items:
                    type: object
                    properties: {}
                segments:
                  type: array
                  description: >-
                    Array of objects, where key is getting from constants, value
                    is 0
                  example:
                    segments:
                      Moms: 3.5
                      Fashion Focused: 2.5
                  items:
                    type: object
                    properties: {}
                countries:
                  type: array
                  description: Countries
                  items:
                    type: string
                cities:
                  type: array
                  description: Cities
                  items:
                    type: string
                isSampleDistribution:
                  type: boolean
                  description: Sample distribution
                pricePerSample:
                  type: number
                  description: Price per samplen
                isInsertDistribution:
                  type: boolean
                  description: Insert distribution
                pricePerInsert:
                  type: number
                  description: Price per insert
                warehouseAddresses:
                  type: array
                  description: Warehouse addresses
                  items:
                    type: string
                isMediaBuy:
                  type: boolean
                  description: Media buy
                mediaBuyTypes:
                  type: array
                  description: Media buy types
                  example:
                    mediaBuyTypes:
                      - name: Home Page Banners
                        description: desc2
                        avgImpressions: 10
                      - name: Push Notifications
                        description: desc2
                        width: 1000
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      previewImage:
                        type: string
                      duration:
                        type: number
                      avgImpressions:
                        type: number
                      priceForDuration:
                        type: number
                      width:
                        type: number
                      height:
                        type: number
        required: false
      responses:
        '200':
          description: Partner profile is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileResponse'
      x-codegen-request-body-name: Partner profile
  /admin/partner/upsert-properties-user-id:
    post:
      tags:
        - Partner Properties
      description: >-
        Insert or update partner properties info by user id. One-to-one relation
        with Partner object. Only for admins
      security:
        - Bearer: []
              
      requestBody:
        description: Partner Properties object. You will update object if you send id
        content:
          application/json:
            schema:
              type: object
              example:
                application/json:
                  capability: test-capability3
                  industry: test-industry
                  genderFocus:
                    key: valueGender
                  ageGroups:
                    key: valueAge
                  segments:
                    key: valueSegments
                  additional:
                    logisticPrice: valueAdditionla1
                    stickerCost: valueAdditionla2
                  userId: 512
          multipart/form-data:
            schema:
              type: object
              example:
                application/json:
                  capability: test-capability3
                  industry: test-industry
                  genderFocus:
                    key: valueGender
                  ageGroups:
                    key: valueAge
                  segments:
                    key: valueSegments
                  additional:
                    logisticPrice: valueAdditionla1
                    stickerCost: valueAdditionla2
                  userId: 512
        required: true
      responses:
        '200':
          description: >-
            Response with brief id and result props (you need it in updating
            cases)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPropsUpsertResponse'
              example:
                status: 200
                data:
                  content:
                    propertiesId: 1
                    result:
                      id: 1
                      capability: test-capability3
                      industry: test-industry
                      genderFocus:
                        key: valueGender
                      ageGroups:
                        key: valueAge
                      segments:
                        key: valueSegments
                      additional:
                        logisticPrice: valueAdditionla1
                        stickerCost: valueAdditionla2
                      partnerId: 512
                      updatedAt: 2020-08-03T06:30:37.665Z
                      createdAt: 2020-08-03T05:29:58.388Z
        '409':
          description: You can't create one more props for this Partner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
              example:
                status: 409
                error:
                  message: >-
                    This partner have created properties object already. Please,
                    use that object!
      x-codegen-request-body-name: input
components:
  schemas:
    BaseSuccessResponse:
      type: object
      properties:
        status:
          type: number
        data:
          type: object
          properties:
            message:
              type: string
            content:
              type: object
              properties: {}
    BaseErrorResponse:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties:
            message:
              type: string
            payload:
              type: object
              properties: {}
    ActivateAccountRequest:
      type: object
      properties:
        token:
          type: string
    ActivateAccountResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    RestorePasswordRequest:
      type: object
      properties:
        email:
          type: string
    RestorePasswordResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    ChangePasswordRequest:
      type: object
      properties:
        token:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    UpdatePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string
    NotificationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/Notification'
    NotificationEditRequest:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
          default: NOTIFICATION
          enum:
            - NOTIFICATION
            - ERROR
            - SUCCESS
            - SYSTEM
    NotificationCreateRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
        title:
          type: string
        description:
          type: string
        type:
          type: string
          default: NOTIFICATION
          enum:
            - NOTIFICATION
            - ERROR
            - SUCCESS
            - SYSTEM
    Notification:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
          default: NOTIFICATION
          enum:
            - NOTIFICATION
            - ERROR
            - SUCCESS
            - SYSTEM
        status:
          type: string
          default: UNREAD
          enum:
            - READ
            - UNREAD
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AgeGroupResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    AgeGroupEditRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    AgeGroupCreateRequest:
      type: object
      properties:
        name:
          type: string
    SegmentResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    SegmentEditRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    SegmentCreateRequest:
      type: object
      properties:
        name:
          type: string

    PermissionResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    RoleResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties: {}
    RoleEditRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    RoleCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    ClientsListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
    PartnersListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
    ChangePasswordResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    CurrenciesRatesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties: {}
    RegistrationRequest:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        phone:
          type: string
        password:
          type: string
        role:
          type: string
    RegistrationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    BriefEditStepRequest:
      type: object
      properties:
        briefTypes:
          type: array
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          id: 41
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    BillEditRequest:
      type: object
      properties:
        id:
          type: number
        briefId:
          type: number
        createdAt:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: number
        po:
          type: array
        quotation:
          type: string
        reason:
          type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - PAID
      example:
        application/json:
          briefId: 744
          createdAt: "2021-08-23T12:33:34.871Z"
          id: 907
          po: 
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
          quotation: "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629722013879-quotation.pdf"
          reason: "Second reason"
          status: "REJECTED"
          updatedAt: "2021-08-23T13:50:49.129Z"
          updatedBy: 1
          bankTransfer:
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
            - "https://quantum-files-bucket.s3.eu-central-1.amazonaws.com/briefs_service_images/744/1629723301338-Sprint_2_Jira_Hours_Export.pdf"
    BriefEditRequest:
      type: object
      properties:
        id:
          type: number
        briefTypes:
          type: array
          description: Zero step in design
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          id: 41
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    BriefCreateRequest:
      type: object
      properties:
        id:
          type: number
        briefTypes:
          type: array
          description: Zero step in design
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    BriefCreateByAdminRequest:
      type: object
      properties:
        id:
          type: number
        clientId:
          type: number
        briefTypes:
          type: array
          description: Zero step in design
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: number
          description: Duration (Dropdown)
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: string
          description: Campaign objective (Drop won with radio buttons)
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
      example:
        application/json:
          name: null-3
          quantity: 100
          distributionItems:
            - brief.stringArray12312 9
            - brief.stringArray21231231 9
          briefTypes:
            - brief.stringArray123123 1
            - brief.stringArray212312313 1
          productType: brief.stringLine
          briefStartDate: '1480638387000'
          duration: 123
          instructions: brief.stringWithLength(500)
          mediaStartDate: '1480638387000'
          mediaDuration: brief.stringWithLength(50)
          targetFocus:
            - brief.stringArray1
          targetAgeGroups:
            - brief.stringArray2
          targetSegments:
            - brief.stringArray3
          targetCountries:
            - brief.stringArray4
          targetCities:
            - brief.stringArray sdf
            - brief.stringArray2 dsfs
          targetCampaigns:
            - brief.stringArray5
          servicePackageType:
            - brief.stringArray6
          mediaTypes:
            - brief.stringArray7
          serviceIsLiquid: false
          serviceIncludingCoupon: true
          serviceDesign: false
          servicePrinting: true
          servicePackaging: true
          servicePackagingNeeds: servicePackagingNeeds
          servicePackagingQuantity: 123
          status: PENDING
    LoginResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    token:
                      type: string
                    role:
                      type: string
                    email:
                      type: string
    UploadMediaResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties: {}
    MediaResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  items:
                    type: object
                    properties: {}
    PublicProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    id:
                      type: string
                    userId:
                      type: string
                    highlights:
                      type: array
                      items:
                        type: string
                    metrics:
                      type: object
                      properties: {}
                    listingShortDescription:
                      type: string
                    companyLogo:
                      type: string
                    previewCardImage:
                      type: string
                    listingHeaderImage:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
    PartnerProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/PartnerProfile'
    ClientProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    id:
                      type: string
                    userId:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    companyName:
                      type: string
                    companyWebsite:
                      type: string
                    profilePicture:
                      type: string
                    location:
                      type: string
                    productTypes:
                      type: array
                      items:
                        type: string
                    genderFocus:
                      type: array
                      items:
                        type: string
                    ageGroups:
                      type: array
                      items:
                        type: string
                    segments:
                      type: array
                      items:
                        type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
    BanResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    UnbanResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    RedirectURLResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
    AuthorizedUserResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        birthday:
          type: string
          format: date-time
        identificationCode:
          type: string
        address:
          type: string
        phone:
          type: string
        hasPassedTest:
          type: boolean
        role:
          type: string
          default: CLIENT
          enum:
            - ADMIN
            - PARTNER
            - CLIENT
        status:
          type: string
          default: INACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - REMOVED
        completion:
          type: object
          properties:
            client:
              type: number
            partner:
              type: number
            public:
              type: number
        createdAt:
          type: string
          format: date-time
    Token:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        token:
          type: string
        expTime:
          type: string
        type:
          type: string
        status:
          type: string
          default: INACTIVE
          enum:
            - NEW
            - USED
            - EXPIRED
        createdAt:
          type: string
          format: date-time
    Brief:
      type: object
      properties:
        briefTypes:
          type: array
          items:
            type: string
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        distributionItems:
          type: array
          description: >-
            Distribution item (Check box). User should be able to see a hint by
            hovering on this section.
          items:
            type: string
        productType:
          type: string
          description: Product type (Dropdown)
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: string
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        instructions:
          type: string
          description: Additional instructions (Text field)
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        mediaTypes:
          type: array
          description: Media/ad type (List of media types with images)
          items:
            type: string
        targetFocus:
          type: array
          description: Gender focus (Check box)
          items:
            type: string
        targetAgeGroups:
          type: array
          description: Age groups (Check box)
          items:
            type: string
        targetSegments:
          type: array
          description: Segments (Drop down with check boxes)
          items:
            type: string
        targetCountries:
          type: array
          description: Countries (Check box)
          items:
            type: string
        targetCities:
          type: array
          description: Cities (Dropdown with check boxes)
          items:
            type: string
        targetCampaigns:
          type: array
          description: Campaign objective (Drop won with radio buttons)
          items:
            type: string
        servicePackageType:
          type: array
          description: Packaging type (Check box)
          items:
            type: string
        serviceIsLiquid:
          type: boolean
          description: Sample is liquid (Radio button)
        serviceIncludingCoupon:
          type: boolean
          description: 'Include coupon, marketing material (Radio button)'
        serviceDesign:
          type: boolean
          description: if they require insert design (Radio button)
          default: false
        servicePrinting:
          type: boolean
          description: Do you require printing? (Radio button)
        servicePackaging:
          type: boolean
          description: Do you require co-packaging services? (Radio button)
        servicePackagingNeeds:
          type: string
          description: describe co-packing needs
        servicePackagingQuantity:
          type: number
          description: asks for quantity of services per bundle
        serviceImages:
          type: array
          description: Upload flyer or brochure (Click on or Drag & Drop to upload)
          items:
            type: string
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        lastFilledStep:
          type: string
          description: >-
            Need for frontend part for saving and using last step user is filled
            before
          enum:
            - BRIEF_TYPE
            - BRIEF_PRODUCT
            - BRIEF_TARGETING
            - BRIEF_SERVICES
            - BRIEF_MEDIA_BUY
            - BRIEF_PARTNER
            - BRIEF_UPLOAD
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/User'
        updatedBy:
          $ref: '#/components/schemas/User'
      description: >-
        All description goes from confluence,
        https://codemotion.atlassian.net/wiki/spaces/QUAN/pages/1748730324/Brief
    BriefListItem:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: string
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        payment:
          type: object
          properties:
            status:
              type: string
              enum:
                - REJECTED
                - PENDING
                - PAID
    BillListItem:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
          description: Product name (Text field)
        quantity:
          type: number
          description: Quantity that has to be distributed (Text field).
        briefStartDate:
          type: string
          description: Desired start date (Calendar view)
          format: date-time
        duration:
          type: string
          description: Duration (Dropdown)
        productImages:
          type: array
          description: Product image (Click on or Drag & Drop to upload)
          items:
            type: string
        mediaStartDate:
          type: string
          description: >-
            Desired start date (Radio button) user should be able to pick date
            that was picked on previous step or pick a new date (display a date
            input field to select a different date)
          format: date-time
        mediaDuration:
          type: string
          description: Duration (Dropdown)
        status:
          type: string
          enum:
            - REJECTED
            - PENDING
            - DRAFT
            - APPROVED
            - EXPIRED
        payment:
          type: object
          properties:
            id:
              type: number
            briefId:
              type: number
            createdAt:
              type: string
            updatedAt:
              type: string
            updatedBy:
              type: number
            po:
              type: array
            quotation:
              type: string
            reason:
              type: string
            status:
              type: string
              enum:
                - REJECTED
                - PENDING
                - PAID
    BriefDetailsSuccessResponse:
      type: object
      properties:
        status:
          type: number
        data:
          type: object
          properties:
            message:
              type: string
            content:
              $ref: '#/components/schemas/Brief'
    BriefFirstCreation:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    briefId:
                      type: number
    BriefList:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties: {}
        data:
          type: object
          properties:
            content:
              type: object
              properties:
                briefs:
                  type: array
                  items:
                    $ref: '#/components/schemas/BriefListItem'
                total:
                  type: number
            message:
              type: string
    PartnerProps:
      type: object
      properties:
        id:
          type: number
        capability:
          type: string
        industry:
          type: string
        genderFocus:
          type: object
          properties: {}
        ageGroups:
          type: object
          properties: {}
        segments:
          type: object
          properties: {}
        additional:
          type: object
          properties: {}
        partnerId:
          type: number
        updatedAt:
          type: string
          format: date-time
        createdAt":
          type: string
          format: date-time
    PartnerPropsUpsertResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: object
                  properties:
                    propertiesId:
                      type: number
                    result:
                      $ref: '#/components/schemas/PartnerProps'
    PartnerPropsDetail:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  $ref: '#/components/schemas/PartnerProps'
    BriefUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    AgeGroupUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    PublicProfileUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    ClientProfileUploadResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: array
                  description: Array of image links
                  items:
                    type: string
    PartnerProfile:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        companyDescription:
          type: string
        headquarterAddress:
          type: string
        socialMediaLinks:
          type: array
          items:
            type: string
        isAutomaticallyApprovedRequest:
          type: boolean
        productCategories:
          type: array
          items:
            type: string
        monthlyVisitors:
          type: number
        monthlyCustomers:
          type: number
        amountOfOrders:
          type: number
        costOfOrder:
          type: number
        currency:
          type: string
        genders:
          type: array
          items:
            type: string
        ageGroups:
          type: array
          items:
            type: string
        targetSegments:
          type: array
          items:
            type: string
        countries:
          type: array
          items:
            type: string
        cities:
          type: array
          items:
            type: string
        isSampleDistribution:
          type: boolean
        pricePerSample:
          type: number
        isInsertDistribution:
          type: boolean
        pricePerInsert:
          type: number
        warehouseAddresses:
          type: array
          items:
            type: string
        isMediaBuy:
          type: boolean
        mediaBuyTypes:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PartnerList:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties: {}
        data:
          type: object
          properties:
            content:
              type: object
              properties:
                briefs:
                  type: array
                  items:
                    type: object
                    properties: {}
            message:
              type: string
    RecommendedPartnerList:
      type: object
      properties:
        status:
          type: number
        error:
          type: object
          properties: {}
        data:
          type: object
          properties:
            content:
              type: object
              properties:
                total:
                  type: number
                partners:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                      userId:
                        type: number
                      companyWebsite:
                        type: string
                      companyDescription:
                        type: string
                      name:
                        type: string
                      mainImageUrl:
                        type: string
                      logoUrl:
                        type: string
                      companyLabel:
                        type: string
                        enum:
                          - ECOMMERCE
                      match:
                        type: number
                      isSampleDistribution:
                        type: boolean
                      pricePerSample:
                        type: number
                      isInsertDistribution:
                        type: boolean
                      pricePerInsert:
                        type: number
                      currency:
                        type: string
                      links:
                        type: array
                        items:
                          type: string
                      social:
                        type: object
                        properties: {}
            message:
              type: string
    Cart:
      type: object
      properties:
        briefId:
          type: number
        additional:
          type: object
          properties: {}
  parameters:
    Authorization:
      name: authorization
      in: header
      required: true
      schema:
        type: string
        default: >-
          Bearer
          
    AdminAuthorization:
      name: authorization
      in: header
      required: true
      schema:
        type: string
        default: >-
          Bearer
          
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    offset:
      name: offset
      in: query
      schema:
        type: number
    limit:
      name: limit
      in: query
      schema:
        type: number
    search:
      name: search
      in: query
      schema:
        type: string
    order:
      name: order
      in: query
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc
    orderBy:
      name: orderBy
      in: query
      schema:
        type: string
    user:
      name: 'user[]'
      in: query
      description: Array of user's object ids
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    role:
      name: role
      in: path
      required: true
      schema:
        type: string
        enum:
          - ADMIN
          - PARTNER
          - CLIENT
      in: query
      schema:
        type: string
    user:
      name: 'user[]'
      in: query
      description: Array of user's object ids
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    role:
      name: role
      in: path
      required: true
      schema:
        type: string
        enum:
          - ADMIN
          - PARTNER
          - CLIENT
